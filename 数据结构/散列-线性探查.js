"use strict";
/**
 * 线性探测法隶属于一种更一般化的散列技术：开放寻址散列。
 * 当发生碰撞时，线性探测法检查散列表中的下一个位置是否为空。
 * 如果为空，就将数据存入该位置；如果不为空，则继续检查下一个位置，直到找到一个空的位置为止。
 * 该技术是基于这样一个事实：每个散列表都会有很多空的单元格，可以使用它们来存储数据。
 *
 * 如果数组的大小是待存储数据个数的 1.5 倍，那么使用开链法；
 * 如果数组的大小是待存储数据的两倍及两倍以上时，那么使用线性探测法
 * */
Object.defineProperty(exports, "__esModule", { value: true });
class HashTable {
    constructor() {
        this.table = new Array(137);
    }
    simpleHash(data) {
        let total = 0;
        for (let i = 0; i < data.length; i++) {
            total += data.charCodeAt(i);
        }
        return total % this.table.length;
    }
    ;
    put(data) {
        let pos = this.betterHash(data);
        if (this.table[pos] === undefined) {
            this.table[pos] = data;
        }
        else {
            while (this.table[pos] !== undefined) {
                pos++;
            }
            this.table[pos] = data;
        }
    }
    ;
    get(key) {
        const hash = this.betterHash(key);
        if (hash > -1) {
            for (let i = hash; this.table[hash] !== undefined; i++) {
                if (this.table[hash] === key) {
                    return this.table[hash];
                }
            }
        }
        return false;
    }
    ;
    putArr(arr) {
        arr.forEach(v => {
            this.put(v);
        });
    }
    ;
    showDistro() {
        for (let i = 0; i < this.table.length; ++i) {
            if (this.table[i] != undefined) {
                console.log(i + " : " + this.table[i]);
            }
        }
    }
    ;
    // 霍纳算法 更好的解决碰撞
    betterHash(string) {
        const H = 31;
        let total = 0;
        for (let i = 0; i < string.length; ++i) {
            total += H * total + string.charCodeAt(i);
        }
        total = total % this.table.length;
        if (total < 0) {
            total += this.table.length - 1;
        }
        return Math.floor(total);
    }
    ;
}
const T = new HashTable();
T.putArr(["David", "Jennifer", "Donnie", "Donnie", "Raymond", "Cynthia", "Mike", "Clayton", "Danny", "Jonathan"]);
T.showDistro();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoi5pWj5YiXLee6v+aAp+aOouafpS5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsi5pWw5o2u57uT5p6EL+aVo+WIly3nur/mgKfmjqLmn6UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7OztLQVFLOztBQUVMLE1BQU0sU0FBUztJQUFmO1FBQ0ksVUFBSyxHQUFhLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBK0RyQyxDQUFDO0lBN0RHLFVBQVUsQ0FBQyxJQUFZO1FBQ25CLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQztRQUNkLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ2xDLEtBQUssSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQy9CO1FBQ0QsT0FBTyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUM7SUFDckMsQ0FBQztJQUFBLENBQUM7SUFFRixHQUFHLENBQUMsSUFBWTtRQUNaLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDaEMsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxLQUFLLFNBQVMsRUFBRTtZQUMvQixJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQztTQUMxQjthQUFNO1lBQ0gsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxLQUFLLFNBQVMsRUFBRTtnQkFDbEMsR0FBRyxFQUFFLENBQUM7YUFDVDtZQUNELElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDO1NBQzFCO0lBQ0wsQ0FBQztJQUFBLENBQUM7SUFFRixHQUFHLENBQUMsR0FBVztRQUNYLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbEMsSUFBSSxJQUFJLEdBQUcsQ0FBQyxDQUFDLEVBQUU7WUFDWCxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLFNBQVMsRUFBRSxDQUFDLEVBQUUsRUFBRTtnQkFDcEQsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRTtvQkFDMUIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO2lCQUMzQjthQUNKO1NBQ0o7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDO0lBQUEsQ0FBQztJQUVGLE1BQU0sQ0FBQyxHQUFhO1FBQ2hCLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUU7WUFDWixJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2hCLENBQUMsQ0FBQyxDQUFDO0lBRVAsQ0FBQztJQUFBLENBQUM7SUFFRixVQUFVO1FBQ04sS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxFQUFFO1lBQ3hDLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxTQUFTLEVBQUU7Z0JBQzVCLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDMUM7U0FDSjtJQUNMLENBQUM7SUFBQSxDQUFDO0lBRUYsZUFBZTtJQUNmLFVBQVUsQ0FBQyxNQUFjO1FBQ3JCLE1BQU0sQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNiLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQztRQUNkLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxFQUFFO1lBQ3BDLEtBQUssSUFBSSxDQUFDLEdBQUcsS0FBSyxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDN0M7UUFDRCxLQUFLLEdBQUcsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDO1FBQ2xDLElBQUksS0FBSyxHQUFHLENBQUMsRUFBRTtZQUNYLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7U0FDbEM7UUFDRCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQUFBLENBQUM7Q0FFTDtBQUVELE1BQU0sQ0FBQyxHQUFHLElBQUksU0FBUyxFQUFFLENBQUM7QUFDMUIsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7QUFDbEgsQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiDnur/mgKfmjqLmtYvms5XpmrblsZ7kuo7kuIDnp43mm7TkuIDoiKzljJbnmoTmlaPliJfmioDmnK/vvJrlvIDmlL7lr7vlnYDmlaPliJfjgIJcbiAqIOW9k+WPkeeUn+eisOaSnuaXtu+8jOe6v+aAp+aOoua1i+azleajgOafpeaVo+WIl+ihqOS4reeahOS4i+S4gOS4quS9jee9ruaYr+WQpuS4uuepuuOAglxuICog5aaC5p6c5Li656m677yM5bCx5bCG5pWw5o2u5a2Y5YWl6K+l5L2N572u77yb5aaC5p6c5LiN5Li656m677yM5YiZ57un57ut5qOA5p+l5LiL5LiA5Liq5L2N572u77yM55u05Yiw5om+5Yiw5LiA5Liq56m655qE5L2N572u5Li65q2i44CCXG4gKiDor6XmioDmnK/mmK/ln7rkuo7ov5nmoLfkuIDkuKrkuovlrp7vvJrmr4/kuKrmlaPliJfooajpg73kvJrmnInlvojlpJrnqbrnmoTljZXlhYPmoLzvvIzlj6/ku6Xkvb/nlKjlroPku6zmnaXlrZjlgqjmlbDmja7jgIJcbiAqXG4gKiDlpoLmnpzmlbDnu4TnmoTlpKflsI/mmK/lvoXlrZjlgqjmlbDmja7kuKrmlbDnmoQgMS41IOWAje+8jOmCo+S5iOS9v+eUqOW8gOmTvuazle+8m1xuICog5aaC5p6c5pWw57uE55qE5aSn5bCP5piv5b6F5a2Y5YKo5pWw5o2u55qE5Lik5YCN5Y+K5Lik5YCN5Lul5LiK5pe277yM6YKj5LmI5L2/55So57q/5oCn5o6i5rWL5rOVXG4gKiAqL1xuXG5jbGFzcyBIYXNoVGFibGUge1xuICAgIHRhYmxlOiBzdHJpbmdbXSA9IG5ldyBBcnJheSgxMzcpO1xuXG4gICAgc2ltcGxlSGFzaChkYXRhOiBzdHJpbmcpIHtcbiAgICAgICAgbGV0IHRvdGFsID0gMDtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB0b3RhbCArPSBkYXRhLmNoYXJDb2RlQXQoaSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRvdGFsICUgdGhpcy50YWJsZS5sZW5ndGg7XG4gICAgfTtcblxuICAgIHB1dChkYXRhOiBzdHJpbmcpIHsgLy8g5YKo5a2Y5LiA5Liq5pWw5o2uXG4gICAgICAgIGxldCBwb3MgPSB0aGlzLmJldHRlckhhc2goZGF0YSk7XG4gICAgICAgIGlmICh0aGlzLnRhYmxlW3Bvc10gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy50YWJsZVtwb3NdID0gZGF0YTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHdoaWxlICh0aGlzLnRhYmxlW3Bvc10gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHBvcysrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy50YWJsZVtwb3NdID0gZGF0YTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBnZXQoa2V5OiBzdHJpbmcpIHtcbiAgICAgICAgY29uc3QgaGFzaCA9IHRoaXMuYmV0dGVySGFzaChrZXkpO1xuICAgICAgICBpZiAoaGFzaCA+IC0xKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gaGFzaDsgdGhpcy50YWJsZVtoYXNoXSAhPT0gdW5kZWZpbmVkOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy50YWJsZVtoYXNoXSA9PT0ga2V5KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnRhYmxlW2hhc2hdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcblxuICAgIHB1dEFycihhcnI6IHN0cmluZ1tdKSB7IC8vIOWCqOWtmOWkmuS4quaVsOaNrlxuICAgICAgICBhcnIuZm9yRWFjaCh2ID0+IHsgLy8g566t5aS05Ye95pWw57uR5a6a5LqG5L2c55So5Z+fXG4gICAgICAgICAgICB0aGlzLnB1dCh2KTtcbiAgICAgICAgfSk7XG5cbiAgICB9O1xuXG4gICAgc2hvd0Rpc3RybygpIHsgLy8g5omT5Y2w5omA5pyJ5pWw5o2uXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy50YWJsZS5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgaWYgKHRoaXMudGFibGVbaV0gIT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coaSArIFwiIDogXCIgKyB0aGlzLnRhYmxlW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvLyDpnI3nurPnrpfms5Ug5pu05aW955qE6Kej5Yaz56Kw5pKeXG4gICAgYmV0dGVySGFzaChzdHJpbmc6IHN0cmluZykge1xuICAgICAgICBjb25zdCBIID0gMzE7XG4gICAgICAgIGxldCB0b3RhbCA9IDA7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyaW5nLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICB0b3RhbCArPSBIICogdG90YWwgKyBzdHJpbmcuY2hhckNvZGVBdChpKTtcbiAgICAgICAgfVxuICAgICAgICB0b3RhbCA9IHRvdGFsICUgdGhpcy50YWJsZS5sZW5ndGg7XG4gICAgICAgIGlmICh0b3RhbCA8IDApIHtcbiAgICAgICAgICAgIHRvdGFsICs9IHRoaXMudGFibGUubGVuZ3RoIC0gMTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gTWF0aC5mbG9vcih0b3RhbCk7XG4gICAgfTtcblxufVxuXG5jb25zdCBUID0gbmV3IEhhc2hUYWJsZSgpO1xuVC5wdXRBcnIoW1wiRGF2aWRcIiwgXCJKZW5uaWZlclwiLCBcIkRvbm5pZVwiLCBcIkRvbm5pZVwiLCBcIlJheW1vbmRcIiwgXCJDeW50aGlhXCIsIFwiTWlrZVwiLCBcIkNsYXl0b25cIiwgXCJEYW5ueVwiLCBcIkpvbmF0aGFuXCJdKTtcblQuc2hvd0Rpc3RybygpO1xuXG5leHBvcnQge307XG4iXX0=