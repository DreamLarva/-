"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sortDeep = void 0;
const lodash_1 = __importDefault(require("lodash"));
function sortDeep(arr) {
    step(arr);
    return arr;
    function step(data) {
        if (Array.isArray(data)) {
            data.forEach((data) => step(data));
            data.sort((a, b) => a - b);
        }
    }
}
exports.sortDeep = sortDeep;
const assert_1 = __importDefault(require("assert"));
assert_1.default.deepStrictEqual(sortDeep([1, 2, 3]), sortDeep([3, 2, 1]));
assert_1.default.deepStrictEqual(sortDeep([
    [1, 2, 3],
    [1, 3, 2],
    [2, 3, 1],
    [2, 1, 3],
    [3, 2, 1],
    [3, 1, 2],
]), sortDeep(lodash_1.default.shuffle([
    [1, 2, 3],
    [1, 3, 2],
    [2, 3, 1],
    [2, 1, 3],
    [3, 2, 1],
    [3, 1, 2],
])));
{
    const data = [1, 2, 3];
    const layer1 = new Array(5).fill(0).map(() => lodash_1.default.shuffle(data));
    const sample1 = new Array(5).fill(0).map(() => lodash_1.default.shuffle(layer1));
    const sample2 = new Array(5).fill(0).map(() => lodash_1.default.shuffle(layer1));
    assert_1.default.deepStrictEqual(sortDeep(sample1), sortDeep(sample2));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXJ0SGVscGVyLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJ1dGlsL2Fzc2VydEhlbHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxvREFBdUI7QUFFdkIsU0FBZ0IsUUFBUSxDQUFDLEdBQVU7SUFDakMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ1YsT0FBTyxHQUFHLENBQUM7SUFFWCxTQUFTLElBQUksQ0FBQyxJQUFTO1FBQ3JCLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUN2QixJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUNuQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1NBQzVCO0lBQ0gsQ0FBQztBQUNILENBQUM7QUFWRCw0QkFVQztBQUVELG9EQUE0QjtBQUU1QixnQkFBTSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDakUsZ0JBQU0sQ0FBQyxlQUFlLENBQ3BCLFFBQVEsQ0FBQztJQUNQLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDVCxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ1QsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNULENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDVCxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ1QsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztDQUNWLENBQUMsRUFDRixRQUFRLENBQ04sZ0JBQUMsQ0FBQyxPQUFPLENBQUM7SUFDUixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ1QsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNULENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDVCxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ1QsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNULENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7Q0FDVixDQUFDLENBQ0gsQ0FDRixDQUFDO0FBRUY7SUFDRSxNQUFNLElBQUksR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDdkIsTUFBTSxNQUFNLEdBQUcsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxnQkFBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQy9ELE1BQU0sT0FBTyxHQUFHLElBQUksS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsZ0JBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNsRSxNQUFNLE9BQU8sR0FBRyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLGdCQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFFbEUsZ0JBQU0sQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxFQUFFLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0NBQzlEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF8gZnJvbSBcImxvZGFzaFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gc29ydERlZXAoYXJyOiBhbnlbXSkge1xuICBzdGVwKGFycik7XG4gIHJldHVybiBhcnI7XG5cbiAgZnVuY3Rpb24gc3RlcChkYXRhOiBhbnkpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSkge1xuICAgICAgZGF0YS5mb3JFYWNoKChkYXRhKSA9PiBzdGVwKGRhdGEpKTtcbiAgICAgIGRhdGEuc29ydCgoYSwgYikgPT4gYSAtIGIpO1xuICAgIH1cbiAgfVxufVxuXG5pbXBvcnQgYXNzZXJ0IGZyb20gXCJhc3NlcnRcIjtcblxuYXNzZXJ0LmRlZXBTdHJpY3RFcXVhbChzb3J0RGVlcChbMSwgMiwgM10pLCBzb3J0RGVlcChbMywgMiwgMV0pKTtcbmFzc2VydC5kZWVwU3RyaWN0RXF1YWwoXG4gIHNvcnREZWVwKFtcbiAgICBbMSwgMiwgM10sXG4gICAgWzEsIDMsIDJdLFxuICAgIFsyLCAzLCAxXSxcbiAgICBbMiwgMSwgM10sXG4gICAgWzMsIDIsIDFdLFxuICAgIFszLCAxLCAyXSxcbiAgXSksXG4gIHNvcnREZWVwKFxuICAgIF8uc2h1ZmZsZShbXG4gICAgICBbMSwgMiwgM10sXG4gICAgICBbMSwgMywgMl0sXG4gICAgICBbMiwgMywgMV0sXG4gICAgICBbMiwgMSwgM10sXG4gICAgICBbMywgMiwgMV0sXG4gICAgICBbMywgMSwgMl0sXG4gICAgXSlcbiAgKVxuKTtcblxue1xuICBjb25zdCBkYXRhID0gWzEsIDIsIDNdO1xuICBjb25zdCBsYXllcjEgPSBuZXcgQXJyYXkoNSkuZmlsbCgwKS5tYXAoKCkgPT4gXy5zaHVmZmxlKGRhdGEpKTtcbiAgY29uc3Qgc2FtcGxlMSA9IG5ldyBBcnJheSg1KS5maWxsKDApLm1hcCgoKSA9PiBfLnNodWZmbGUobGF5ZXIxKSk7XG4gIGNvbnN0IHNhbXBsZTIgPSBuZXcgQXJyYXkoNSkuZmlsbCgwKS5tYXAoKCkgPT4gXy5zaHVmZmxlKGxheWVyMSkpO1xuXG4gIGFzc2VydC5kZWVwU3RyaWN0RXF1YWwoc29ydERlZXAoc2FtcGxlMSksIHNvcnREZWVwKHNhbXBsZTIpKTtcbn1cbiJdfQ==