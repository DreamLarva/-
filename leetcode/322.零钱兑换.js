"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 回溯算法 不出意外的超时了
 */
var coinChange1 = function (coins, amount) {
    let cacheTimes = Infinity;
    return backtrack(coins.sort((a, b) => b - a), amount);
    function backtrack(coins, amount, times = 0) {
        if (times >= cacheTimes)
            return -1;
        if (amount === 0) {
            cacheTimes = Math.min(cacheTimes, times);
            return times;
        }
        if (amount < 0)
            return -1;
        const curTimesArr = coins
            .map((coin) => backtrack(coins, amount - coin, times + 1))
            .filter((v) => v !== -1);
        if (curTimesArr.length !== 0)
            return Math.min(...curTimesArr);
        return -1;
    }
};
/**
 * 添加 剪枝 的回溯算法
 * 从大的数额的硬币 的 最大的数量目 开始试
 * 然后用较小数额的硬币 的 最大数目 递归至 刚好等于 amount
 * 当 当前数额 以及 更小数额都无法 做到时 就回到 更大数额的 但是用少一枚的数目
 */
var coinChange2 = function (coins, amount) {
    let cacheTimes = Infinity;
    coins.sort((a, b) => a - b);
    backtrack(coins, coins.length - 1, amount, 0);
    return cacheTimes === Infinity ? -1 : cacheTimes;
    function backtrack(coins, index = coins.length - 1, // 限定每次回溯能用到的 值 从大到小
    amount, times = 0) {
        if (index < 0)
            return;
        if (amount === 0)
            cacheTimes = Math.min(times, cacheTimes);
        // 如果 全用 用当前 数额的银币 也会超过已经可以达成的 最小枚数 就剪枝
        if (cacheTimes <= times + amount / coins[index]) {
            return;
        }
        if (amount % coins[index] === 0) {
            cacheTimes = Math.min(cacheTimes, times + amount / coins[index]);
            return;
        }
        for (let i = Math.floor(amount / coins[index]); i >= 0; i--) {
            backtrack(coins, index - 1, amount - coins[index] * i, times + i);
        }
    }
};
// todo 动态规划
const assert_1 = __importDefault(require("assert"));
// assert.strictEqual(coinChange([1, 2, 5], 11), 3);
// assert.strictEqual(coinChange([2, 5, 10, 1], 27), 4);
// assert.strictEqual(coinChange([2, 5, 10], 100), 10);
assert_1.default.strictEqual(coinChange2([1, 2, 5], 11), 3);
assert_1.default.strictEqual(coinChange2([2, 5, 10, 1], 27), 4);
assert_1.default.strictEqual(coinChange2([2, 5, 10], 100), 10);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzIyLumbtumSseWFkeaNoi5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsibGVldGNvZGUvMzIyLumbtumSseWFkeaNoi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQW9CQTs7R0FFRztBQUNILElBQUksV0FBVyxHQUFHLFVBQVUsS0FBZSxFQUFFLE1BQWM7SUFDekQsSUFBSSxVQUFVLEdBQUcsUUFBUSxDQUFDO0lBRTFCLE9BQU8sU0FBUyxDQUNkLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQzNCLE1BQU0sQ0FDUCxDQUFDO0lBRUYsU0FBUyxTQUFTLENBQ2hCLEtBQWUsRUFDZixNQUFjLEVBQ2QsUUFBZ0IsQ0FBQztRQUVqQixJQUFJLEtBQUssSUFBSSxVQUFVO1lBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUNuQyxJQUFJLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDaEIsVUFBVSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBQ3pDLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7UUFDRCxJQUFJLE1BQU0sR0FBRyxDQUFDO1lBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUUxQixNQUFNLFdBQVcsR0FBRyxLQUFLO2FBQ3RCLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxNQUFNLEdBQUcsSUFBSSxFQUFFLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQzthQUN6RCxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRTNCLElBQUksV0FBVyxDQUFDLE1BQU0sS0FBSyxDQUFDO1lBQUUsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsV0FBVyxDQUFDLENBQUM7UUFDOUQsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUNaLENBQUM7QUFDSCxDQUFDLENBQUM7QUFFRjs7Ozs7R0FLRztBQUNILElBQUksV0FBVyxHQUFHLFVBQVUsS0FBZSxFQUFFLE1BQWM7SUFDekQsSUFBSSxVQUFVLEdBQUcsUUFBUSxDQUFDO0lBQzFCLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDNUIsU0FBUyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDOUMsT0FBTyxVQUFVLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDO0lBRWpELFNBQVMsU0FBUyxDQUNoQixLQUFlLEVBQ2YsUUFBZ0IsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsb0JBQW9CO0lBQ3RELE1BQWMsRUFDZCxRQUFnQixDQUFDO1FBRWpCLElBQUksS0FBSyxHQUFHLENBQUM7WUFBRSxPQUFPO1FBQ3RCLElBQUksTUFBTSxLQUFLLENBQUM7WUFBRSxVQUFVLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFDM0QsdUNBQXVDO1FBQ3ZDLElBQUksVUFBVSxJQUFJLEtBQUssR0FBRyxNQUFNLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQy9DLE9BQU87U0FDUjtRQUVELElBQUksTUFBTSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDL0IsVUFBVSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLEtBQUssR0FBRyxNQUFNLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFDakUsT0FBTztTQUNSO1FBRUQsS0FBSyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzNELFNBQVMsQ0FBQyxLQUFLLEVBQUUsS0FBSyxHQUFHLENBQUMsRUFBRSxNQUFNLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsRUFBRSxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDbkU7SUFDSCxDQUFDO0FBQ0gsQ0FBQyxDQUFDO0FBRUYsWUFBWTtBQUVaLG9EQUE0QjtBQUM1QixvREFBb0Q7QUFDcEQsd0RBQXdEO0FBQ3hELHVEQUF1RDtBQUV2RCxnQkFBTSxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQ2xELGdCQUFNLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQ3RELGdCQUFNLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxu57uZ5a6a5LiN5ZCM6Z2i6aKd55qE56Gs5biBIGNvaW5zIOWSjOS4gOS4quaAu+mHkeminSBhbW91bnTjgILnvJblhpnkuIDkuKrlh73mlbDmnaXorqHnrpflj6/ku6Xlh5HmiJDmgLvph5Hpop3miYDpnIDnmoTmnIDlsJHnmoTnoazluIHkuKrmlbDjgILlpoLmnpzmsqHmnInku7vkvZXkuIDnp43noazluIHnu4TlkIjog73nu4TmiJDmgLvph5Hpop3vvIzov5Tlm57CoC0x44CCXG5cbuekuuS+i8KgMTpcblxu6L6T5YWlOiBjb2lucyA9IFsxLCAyLCA1XSwgYW1vdW50ID0gMTFcbui+k+WHujogM1xu6Kej6YeKOiAxMSA9IDUgKyA1ICsgMVxu56S65L6LIDI6XG5cbui+k+WFpTogY29pbnMgPSBbMl0sIGFtb3VudCA9IDNcbui+k+WHujogLTFcbuivtOaYjjpcbuS9oOWPr+S7peiupOS4uuavj+enjeehrOW4geeahOaVsOmHj+aYr+aXoOmZkOeahOOAglxuXG7mnaXmupDvvJrlipvmiaPvvIhMZWV0Q29kZe+8iVxu6ZO+5o6l77yaaHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvY29pbi1jaGFuZ2VcbuiRl+S9nOadg+W9kumihuaJo+e9kee7nOaJgOacieOAguWVhuS4mui9rOi9veivt+iBlOezu+WumOaWueaOiOadg++8jOmdnuWVhuS4mui9rOi9veivt+azqOaYjuWHuuWkhOOAglxuKiAqL1xuaW1wb3J0IF8gZnJvbSBcImxvZGFzaFwiO1xuLyoqXG4gKiDlm57muq/nrpfms5Ug5LiN5Ye65oSP5aSW55qE6LaF5pe25LqGXG4gKi9cbnZhciBjb2luQ2hhbmdlMSA9IGZ1bmN0aW9uIChjb2luczogbnVtYmVyW10sIGFtb3VudDogbnVtYmVyKSB7XG4gIGxldCBjYWNoZVRpbWVzID0gSW5maW5pdHk7XG5cbiAgcmV0dXJuIGJhY2t0cmFjayhcbiAgICBjb2lucy5zb3J0KChhLCBiKSA9PiBiIC0gYSksXG4gICAgYW1vdW50XG4gICk7XG5cbiAgZnVuY3Rpb24gYmFja3RyYWNrKFxuICAgIGNvaW5zOiBudW1iZXJbXSxcbiAgICBhbW91bnQ6IG51bWJlcixcbiAgICB0aW1lczogbnVtYmVyID0gMFxuICApOiBudW1iZXIge1xuICAgIGlmICh0aW1lcyA+PSBjYWNoZVRpbWVzKSByZXR1cm4gLTE7XG4gICAgaWYgKGFtb3VudCA9PT0gMCkge1xuICAgICAgY2FjaGVUaW1lcyA9IE1hdGgubWluKGNhY2hlVGltZXMsIHRpbWVzKTtcbiAgICAgIHJldHVybiB0aW1lcztcbiAgICB9XG4gICAgaWYgKGFtb3VudCA8IDApIHJldHVybiAtMTtcblxuICAgIGNvbnN0IGN1clRpbWVzQXJyID0gY29pbnNcbiAgICAgIC5tYXAoKGNvaW4pID0+IGJhY2t0cmFjayhjb2lucywgYW1vdW50IC0gY29pbiwgdGltZXMgKyAxKSlcbiAgICAgIC5maWx0ZXIoKHYpID0+IHYgIT09IC0xKTtcblxuICAgIGlmIChjdXJUaW1lc0Fyci5sZW5ndGggIT09IDApIHJldHVybiBNYXRoLm1pbiguLi5jdXJUaW1lc0Fycik7XG4gICAgcmV0dXJuIC0xO1xuICB9XG59O1xuXG4vKipcbiAqIOa3u+WKoCDliarmnp0g55qE5Zue5rqv566X5rOVXG4gKiDku47lpKfnmoTmlbDpop3nmoTnoazluIEg55qEIOacgOWkp+eahOaVsOmHj+ebriDlvIDlp4vor5VcbiAqIOeEtuWQjueUqOi+g+Wwj+aVsOmineeahOehrOW4gSDnmoQg5pyA5aSn5pWw55uuIOmAkuW9kuiHsyDliJrlpb3nrYnkuo4gYW1vdW50XG4gKiDlvZMg5b2T5YmN5pWw6aKdIOS7peWPiiDmm7TlsI/mlbDpop3pg73ml6Dms5Ug5YGa5Yiw5pe2IOWwseWbnuWIsCDmm7TlpKfmlbDpop3nmoQg5L2G5piv55So5bCR5LiA5p6a55qE5pWw55uuXG4gKi9cbnZhciBjb2luQ2hhbmdlMiA9IGZ1bmN0aW9uIChjb2luczogbnVtYmVyW10sIGFtb3VudDogbnVtYmVyKSB7XG4gIGxldCBjYWNoZVRpbWVzID0gSW5maW5pdHk7XG4gIGNvaW5zLnNvcnQoKGEsIGIpID0+IGEgLSBiKTtcbiAgYmFja3RyYWNrKGNvaW5zLCBjb2lucy5sZW5ndGggLSAxLCBhbW91bnQsIDApO1xuICByZXR1cm4gY2FjaGVUaW1lcyA9PT0gSW5maW5pdHkgPyAtMSA6IGNhY2hlVGltZXM7XG5cbiAgZnVuY3Rpb24gYmFja3RyYWNrKFxuICAgIGNvaW5zOiBudW1iZXJbXSxcbiAgICBpbmRleDogbnVtYmVyID0gY29pbnMubGVuZ3RoIC0gMSwgLy8g6ZmQ5a6a5q+P5qyh5Zue5rqv6IO955So5Yiw55qEIOWAvCDku47lpKfliLDlsI9cbiAgICBhbW91bnQ6IG51bWJlcixcbiAgICB0aW1lczogbnVtYmVyID0gMFxuICApIHtcbiAgICBpZiAoaW5kZXggPCAwKSByZXR1cm47XG4gICAgaWYgKGFtb3VudCA9PT0gMCkgY2FjaGVUaW1lcyA9IE1hdGgubWluKHRpbWVzLCBjYWNoZVRpbWVzKTtcbiAgICAvLyDlpoLmnpwg5YWo55SoIOeUqOW9k+WJjSDmlbDpop3nmoTpk7bluIEg5Lmf5Lya6LaF6L+H5bey57uP5Y+v5Lul6L6+5oiQ55qEIOacgOWwj+aemuaVsCDlsLHliarmnp1cbiAgICBpZiAoY2FjaGVUaW1lcyA8PSB0aW1lcyArIGFtb3VudCAvIGNvaW5zW2luZGV4XSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChhbW91bnQgJSBjb2luc1tpbmRleF0gPT09IDApIHtcbiAgICAgIGNhY2hlVGltZXMgPSBNYXRoLm1pbihjYWNoZVRpbWVzLCB0aW1lcyArIGFtb3VudCAvIGNvaW5zW2luZGV4XSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yIChsZXQgaSA9IE1hdGguZmxvb3IoYW1vdW50IC8gY29pbnNbaW5kZXhdKTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgIGJhY2t0cmFjayhjb2lucywgaW5kZXggLSAxLCBhbW91bnQgLSBjb2luc1tpbmRleF0gKiBpLCB0aW1lcyArIGkpO1xuICAgIH1cbiAgfVxufTtcblxuLy8gdG9kbyDliqjmgIHop4TliJJcblxuaW1wb3J0IGFzc2VydCBmcm9tIFwiYXNzZXJ0XCI7XG4vLyBhc3NlcnQuc3RyaWN0RXF1YWwoY29pbkNoYW5nZShbMSwgMiwgNV0sIDExKSwgMyk7XG4vLyBhc3NlcnQuc3RyaWN0RXF1YWwoY29pbkNoYW5nZShbMiwgNSwgMTAsIDFdLCAyNyksIDQpO1xuLy8gYXNzZXJ0LnN0cmljdEVxdWFsKGNvaW5DaGFuZ2UoWzIsIDUsIDEwXSwgMTAwKSwgMTApO1xuXG5hc3NlcnQuc3RyaWN0RXF1YWwoY29pbkNoYW5nZTIoWzEsIDIsIDVdLCAxMSksIDMpO1xuYXNzZXJ0LnN0cmljdEVxdWFsKGNvaW5DaGFuZ2UyKFsyLCA1LCAxMCwgMV0sIDI3KSwgNCk7XG5hc3NlcnQuc3RyaWN0RXF1YWwoY29pbkNoYW5nZTIoWzIsIDUsIDEwXSwgMTAwKSwgMTApO1xuIl19