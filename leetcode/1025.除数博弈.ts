/*
1025. 除数博弈
爱丽丝和鲍勃一起玩游戏，他们轮流行动。爱丽丝先手开局。

最初，黑板上有一个数字 N 。在每个玩家的回合，玩家需要执行以下操作：

选出任一 x，满足 0 < x < N 且 N % x == 0 。
用 N - x 替换黑板上的数字 N 。
如果玩家无法执行这些操作，就会输掉游戏。

只有在爱丽丝在游戏中取得胜利时才返回 True，否则返回 false。假设两个玩家都以最佳状态参与游戏。



示例 1：

输入：2
输出：true
解释：爱丽丝选择 1，鲍勃无法进行操作。
示例 2：

输入：3
输出：false
解释：爱丽丝选择 1，鲍勃也选择 1，然后爱丽丝无法进行操作。


提示：

1 <= N <= 1000
* */
f
function divisorGame(N: number): boolean {
    /**
     * 逻辑很简单
     * 因为 至少可以取 1 所以 最终决出胜负的时候是 谁取到1 就输了
     * 奇数的时候 至少可以 -1 , 偶数的时候至少可以 -2 或者 -1
     * 是奇数的时候 只有 减去 奇数这一种选择 最终给出一个偶数
     * 是偶数的时候 有 种选择 减去奇数 返回奇数 ,减去偶数 返回偶数
     * 所以开始拿偶数的人 有优先权 决定 另一个人一直保持 奇偶性,让另一个人 一直保持奇数一直到1
     * */
    return N % 2 === 0
}
