"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/*
给定两个字符串形式的非负整数 num1 和num2 ，计算它们的和。

注意：

1. num1 和num2 的长度都小于 5100.
2. num1 和num2 都只包含数字 0-9.
3. num1 和num2 都不包含任何前导零。
你不能使用任何內建 BigInteger 库， 也不能直接将输入的字符串转换为整数形式。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/add-strings
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
* */
/**
 * @param {string} num1
 * @param {string} num2
 * @return {string}
 */
var addStrings = function (num1, num2) {
    if (num1.length <= 15 && num2.length <= 15) {
        return String(Number(num1) + Number(num2));
    }
    const length_offset = num1.length - num2.length;
    if (length_offset < 0)
        return addStrings(num2, num1);
    const step = 15;
    const pairs = [];
    for (let i = 0; i < num1.length; i += step) {
        const pair = [];
        pair.push(num1.substr(i, step));
        if (i + step > length_offset) {
            const offset = i + step - length_offset;
            pair.push(num2.substr(Math.max(i - length_offset, 0), i - length_offset < 0 ? offset : step));
        }
        pairs.push(pair);
    }
    let result = "";
    let carry = 0;
    pairs.reverse().forEach(([a, b = "0"]) => {
        const sum = Number(a) + Number(b) + carry;
        const max_length = Math.max(a.length, b.length);
        carry = 0;
        if (sum >= 10 ** max_length) {
            carry = 1;
            result = String(sum).slice(1) + result;
        }
        else {
            result = String(sum).padStart(max_length, "0") + result;
        }
    });
    return carry === 1 ? "1" + result : result;
};
const assert_1 = __importDefault(require("assert"));
assert_1.default.strictEqual(addStrings("123456789012345678901234567890123456789012345678901234567890", "123456789012345678901234567890"), "123456789012345678901234567890246913578024691357802469135780");
assert_1.default.strictEqual(addStrings("9333852702227987", "85731737104263"), "9419584439332250");
assert_1.default.strictEqual(addStrings("96423702883453279", "72156405165936898"), "168580108049390177");
assert_1.default.strictEqual(addStrings("401716832807512840963", "167141802233061013023557397451289113296441069"), "167141802233061013023557799168121920809282032");
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDE1LuWtl+espuS4suebuOWKoC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsibGVldGNvZGUvNDE1LuWtl+espuS4suebuOWKoC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7Ozs7Ozs7Ozs7O0lBYUk7QUFDSjs7OztHQUlHO0FBQ0gsSUFBSSxVQUFVLEdBQUcsVUFBVSxJQUFZLEVBQUUsSUFBWTtJQUNqRCxJQUFJLElBQUksQ0FBQyxNQUFNLElBQUksRUFBRSxJQUFJLElBQUksQ0FBQyxNQUFNLElBQUksRUFBRSxFQUFFO1FBQ3hDLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztLQUM5QztJQUNELE1BQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNoRCxJQUFJLGFBQWEsR0FBRyxDQUFDO1FBQUUsT0FBTyxVQUFVLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3JELE1BQU0sSUFBSSxHQUFHLEVBQUUsQ0FBQztJQUNoQixNQUFNLEtBQUssR0FBZSxFQUFFLENBQUM7SUFDN0IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLElBQUksRUFBRTtRQUN4QyxNQUFNLElBQUksR0FBYSxFQUFFLENBQUM7UUFDMUIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxHQUFHLElBQUksR0FBRyxhQUFhLEVBQUU7WUFDMUIsTUFBTSxNQUFNLEdBQUcsQ0FBQyxHQUFHLElBQUksR0FBRyxhQUFhLENBQUM7WUFDeEMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLGFBQWEsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsYUFBYSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1NBQ2pHO1FBQ0QsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUNwQjtJQUVELElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUNoQixJQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7SUFDZCxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxFQUFFLEVBQUU7UUFDckMsTUFBTSxHQUFHLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUM7UUFDMUMsTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNoRCxLQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQ1YsSUFBSSxHQUFHLElBQUksRUFBRSxJQUFJLFVBQVUsRUFBRTtZQUN6QixLQUFLLEdBQUcsQ0FBQyxDQUFDO1lBQ1YsTUFBTSxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDO1NBQzFDO2FBQU07WUFDSCxNQUFNLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxVQUFVLEVBQUMsR0FBRyxDQUFDLEdBQUcsTUFBTSxDQUFDO1NBQzFEO0lBRUwsQ0FBQyxDQUFDLENBQUM7SUFFSCxPQUFPLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztBQUUvQyxDQUFDLENBQUM7QUFHRixvREFBNEI7QUFFNUIsZ0JBQU0sQ0FBQyxXQUFXLENBQ2QsVUFBVSxDQUNOLDhEQUE4RCxFQUM5RCxnQ0FBZ0MsQ0FDbkMsRUFDRCw4REFBOEQsQ0FDakUsQ0FBQztBQUNGLGdCQUFNLENBQUMsV0FBVyxDQUNkLFVBQVUsQ0FDTixrQkFBa0IsRUFDbEIsZ0JBQWdCLENBQ25CLEVBQ0Qsa0JBQWtCLENBQ3JCLENBQUM7QUFFRixnQkFBTSxDQUFDLFdBQVcsQ0FDZCxVQUFVLENBQ04sbUJBQW1CLEVBQ25CLG1CQUFtQixDQUN0QixFQUNELG9CQUFvQixDQUN2QixDQUFDO0FBRUYsZ0JBQU0sQ0FBQyxXQUFXLENBQ2QsVUFBVSxDQUNOLHVCQUF1QixFQUN2QiwrQ0FBK0MsQ0FDbEQsRUFDRCwrQ0FBK0MsQ0FDbEQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG7nu5nlrprkuKTkuKrlrZfnrKbkuLLlvaLlvI/nmoTpnZ7otJ/mlbTmlbDCoG51bTEg5ZKMbnVtMsKg77yM6K6h566X5a6D5Lus55qE5ZKM44CCXG5cbuazqOaEj++8mlxuXG4xLiBudW0xIOWSjG51bTLCoOeahOmVv+W6pumDveWwj+S6jiA1MTAwLlxuMi4gbnVtMSDlkoxudW0yIOmDveWPquWMheWQq+aVsOWtl8KgMC05LlxuMy4gbnVtMSDlkoxudW0yIOmDveS4jeWMheWQq+S7u+S9leWJjeWvvOmbtuOAglxu5L2g5LiN6IO95L2/55So5Lu75L2V5YWn5bu6IEJpZ0ludGVnZXIg5bqT77yMwqDkuZ/kuI3og73nm7TmjqXlsIbovpPlhaXnmoTlrZfnrKbkuLLovazmjaLkuLrmlbTmlbDlvaLlvI/jgIJcblxu5p2l5rqQ77ya5Yqb5omj77yITGVldENvZGXvvIlcbumTvuaOpe+8mmh0dHBzOi8vbGVldGNvZGUtY24uY29tL3Byb2JsZW1zL2FkZC1zdHJpbmdzXG7okZfkvZzmnYPlvZLpoobmiaPnvZHnu5zmiYDmnInjgILllYbkuJrovazovb3or7fogZTns7vlrpjmlrnmjojmnYPvvIzpnZ7llYbkuJrovazovb3or7fms6jmmI7lh7rlpITjgIJcbiogKi9cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IG51bTFcbiAqIEBwYXJhbSB7c3RyaW5nfSBudW0yXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbnZhciBhZGRTdHJpbmdzID0gZnVuY3Rpb24gKG51bTE6IHN0cmluZywgbnVtMjogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBpZiAobnVtMS5sZW5ndGggPD0gMTUgJiYgbnVtMi5sZW5ndGggPD0gMTUpIHtcbiAgICAgICAgcmV0dXJuIFN0cmluZyhOdW1iZXIobnVtMSkgKyBOdW1iZXIobnVtMikpO1xuICAgIH1cbiAgICBjb25zdCBsZW5ndGhfb2Zmc2V0ID0gbnVtMS5sZW5ndGggLSBudW0yLmxlbmd0aDtcbiAgICBpZiAobGVuZ3RoX29mZnNldCA8IDApIHJldHVybiBhZGRTdHJpbmdzKG51bTIsIG51bTEpO1xuICAgIGNvbnN0IHN0ZXAgPSAxNTtcbiAgICBjb25zdCBwYWlyczogc3RyaW5nW11bXSA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtMS5sZW5ndGg7IGkgKz0gc3RlcCkge1xuICAgICAgICBjb25zdCBwYWlyOiBzdHJpbmdbXSA9IFtdO1xuICAgICAgICBwYWlyLnB1c2gobnVtMS5zdWJzdHIoaSwgc3RlcCkpO1xuICAgICAgICBpZiAoaSArIHN0ZXAgPiBsZW5ndGhfb2Zmc2V0KSB7XG4gICAgICAgICAgICBjb25zdCBvZmZzZXQgPSBpICsgc3RlcCAtIGxlbmd0aF9vZmZzZXQ7XG4gICAgICAgICAgICBwYWlyLnB1c2gobnVtMi5zdWJzdHIoTWF0aC5tYXgoaSAtIGxlbmd0aF9vZmZzZXQsIDApLCBpIC0gbGVuZ3RoX29mZnNldCA8IDAgPyBvZmZzZXQgOiBzdGVwKSk7XG4gICAgICAgIH1cbiAgICAgICAgcGFpcnMucHVzaChwYWlyKTtcbiAgICB9XG5cbiAgICBsZXQgcmVzdWx0ID0gXCJcIjtcbiAgICBsZXQgY2FycnkgPSAwO1xuICAgIHBhaXJzLnJldmVyc2UoKS5mb3JFYWNoKChbYSwgYiA9IFwiMFwiXSkgPT4ge1xuICAgICAgICBjb25zdCBzdW0gPSBOdW1iZXIoYSkgKyBOdW1iZXIoYikgKyBjYXJyeTtcbiAgICAgICAgY29uc3QgbWF4X2xlbmd0aCA9IE1hdGgubWF4KGEubGVuZ3RoLCBiLmxlbmd0aCk7XG4gICAgICAgIGNhcnJ5ID0gMDtcbiAgICAgICAgaWYgKHN1bSA+PSAxMCAqKiBtYXhfbGVuZ3RoKSB7XG4gICAgICAgICAgICBjYXJyeSA9IDE7XG4gICAgICAgICAgICByZXN1bHQgPSBTdHJpbmcoc3VtKS5zbGljZSgxKSArIHJlc3VsdDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IFN0cmluZyhzdW0pLnBhZFN0YXJ0KG1heF9sZW5ndGgsXCIwXCIpICsgcmVzdWx0O1xuICAgICAgICB9XG5cbiAgICB9KTtcblxuICAgIHJldHVybiBjYXJyeSA9PT0gMSA/IFwiMVwiICsgcmVzdWx0IDogcmVzdWx0O1xuXG59O1xuXG5cbmltcG9ydCBhc3NlcnQgZnJvbSAnYXNzZXJ0JztcblxuYXNzZXJ0LnN0cmljdEVxdWFsKFxuICAgIGFkZFN0cmluZ3MoXG4gICAgICAgIFwiMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwXCIsXG4gICAgICAgIFwiMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwXCIsXG4gICAgKSxcbiAgICBcIjEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDI0NjkxMzU3ODAyNDY5MTM1NzgwMjQ2OTEzNTc4MFwiLFxuKTtcbmFzc2VydC5zdHJpY3RFcXVhbChcbiAgICBhZGRTdHJpbmdzKFxuICAgICAgICBcIjkzMzM4NTI3MDIyMjc5ODdcIixcbiAgICAgICAgXCI4NTczMTczNzEwNDI2M1wiLFxuICAgICksXG4gICAgXCI5NDE5NTg0NDM5MzMyMjUwXCIsXG4pO1xuXG5hc3NlcnQuc3RyaWN0RXF1YWwoXG4gICAgYWRkU3RyaW5ncyhcbiAgICAgICAgXCI5NjQyMzcwMjg4MzQ1MzI3OVwiLFxuICAgICAgICBcIjcyMTU2NDA1MTY1OTM2ODk4XCIsXG4gICAgKSxcbiAgICBcIjE2ODU4MDEwODA0OTM5MDE3N1wiLFxuKTtcblxuYXNzZXJ0LnN0cmljdEVxdWFsKFxuICAgIGFkZFN0cmluZ3MoXG4gICAgICAgIFwiNDAxNzE2ODMyODA3NTEyODQwOTYzXCIsXG4gICAgICAgIFwiMTY3MTQxODAyMjMzMDYxMDEzMDIzNTU3Mzk3NDUxMjg5MTEzMjk2NDQxMDY5XCIsXG4gICAgKSxcbiAgICBcIjE2NzE0MTgwMjIzMzA2MTAxMzAyMzU1Nzc5OTE2ODEyMTkyMDgwOTI4MjAzMlwiLFxuKTtcblxuIl19