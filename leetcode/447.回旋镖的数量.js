"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/*
给定平面上 n 对不同的点，“回旋镖” 是由点表示的元组 (i, j, k) ，
其中 i 和 j 之间的距离和 i 和 k 之间的距离相等（需要考虑元组的顺序）。

找到所有回旋镖的数量。你可以假设 n 最大为 500，所有点的坐标在闭区间 [-10000, 10000] 中。

示例:

输入:
[[0,0],[1,0],[2,0]]

输出:
2

解释:
两个回旋镖为 [[1,0],[0,0],[2,0]] 和 [[1,0],[2,0],[0,0]]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/number-of-boomerangs
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
* */
/**
 * @param {number[][]} points
 * @return {number}
 */
var numberOfBoomerangs = function (points) {
    let result = 0;
    for (let i = 0; i < points.length; i++) {
        const map = {};
        for (let j = 0; j < points.length; j++) {
            if (i === j)
                continue;
            const distance = Math.abs((points[i][0] - points[j][0]) ** 2 + (points[i][1] - points[j][1]) ** 2);
            map[distance] = map[distance] == null ? 1 : map[distance] + 1;
        }
        result += Object.values(map).reduce((sum, cur) => {
            return sum + cur * (cur - 1);
        }, 0);
    }
    return result;
};
const assert_1 = __importDefault(require("assert"));
assert_1.default.strictEqual(numberOfBoomerangs([
    [0, 0],
    [1, 0],
    [2, 0],
]), 2);
assert_1.default.strictEqual(numberOfBoomerangs([
    [0, 0],
    [1, 0],
    [2, 0],
    [-1, 0],
]), 4);
assert_1.default.strictEqual(numberOfBoomerangs([
    [0, 0],
    [1, 0],
    [2, 0],
    [3, 1],
    [4, 1],
    [0, 1],
]), 6);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDQ3LuWbnuaXi+mVlueahOaVsOmHjy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsibGVldGNvZGUvNDQ3LuWbnuaXi+mVlueahOaVsOmHjy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQW9CSTtBQUNKOzs7R0FHRztBQUNILElBQUksa0JBQWtCLEdBQUcsVUFBVSxNQUFrQjtJQUNuRCxJQUFJLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDZixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN0QyxNQUFNLEdBQUcsR0FBOEIsRUFBRSxDQUFDO1FBQzFDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3RDLElBQUksQ0FBQyxLQUFLLENBQUM7Z0JBQUUsU0FBUztZQUN0QixNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUN2QixDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUN4RSxDQUFDO1lBQ0YsR0FBRyxDQUFDLFFBQVEsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxRQUFRLENBQUMsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUMvRDtRQUVELE1BQU0sSUFBSSxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRTtZQUMvQyxPQUFPLEdBQUcsR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDL0IsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0tBQ1A7SUFFRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDLENBQUM7QUFFRixvREFBNEI7QUFFNUIsZ0JBQU0sQ0FBQyxXQUFXLENBQ2hCLGtCQUFrQixDQUFDO0lBQ2pCLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNOLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNOLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztDQUNQLENBQUMsRUFDRixDQUFDLENBQ0YsQ0FBQztBQUNGLGdCQUFNLENBQUMsV0FBVyxDQUNoQixrQkFBa0IsQ0FBQztJQUNqQixDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDTixDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDTixDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDTixDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztDQUNSLENBQUMsRUFDRixDQUFDLENBQ0YsQ0FBQztBQUNGLGdCQUFNLENBQUMsV0FBVyxDQUNoQixrQkFBa0IsQ0FBQztJQUNqQixDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDTixDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDTixDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDTixDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDTixDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDTixDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7Q0FDUCxDQUFDLEVBQ0YsQ0FBQyxDQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxu57uZ5a6a5bmz6Z2i5LiKwqBuIOWvueS4jeWQjOeahOeCue+8jOKAnOWbnuaXi+mVluKAnSDmmK/nlLHngrnooajnpLrnmoTlhYPnu4TCoChpLCBqLCBrKcKg77yMXG7lhbbkuK3CoGnCoOWSjMKgasKg5LmL6Ze055qE6Led56a75ZKMwqBpwqDlkozCoGvCoOS5i+mXtOeahOi3neemu+ebuOetie+8iOmcgOimgeiAg+iZkeWFg+e7hOeahOmhuuW6j++8ieOAglxuXG7mib7liLDmiYDmnInlm57ml4vplZbnmoTmlbDph4/jgILkvaDlj6/ku6XlgYforr7CoG4g5pyA5aSn5Li6IDUwMO+8jOaJgOacieeCueeahOWdkOagh+WcqOmXreWMuumXtCBbLTEwMDAwLCAxMDAwMF0g5Lit44CCXG5cbuekuuS+izpcblxu6L6T5YWlOlxuW1swLDBdLFsxLDBdLFsyLDBdXVxuXG7ovpPlh7o6XG4yXG5cbuino+mHijpcbuS4pOS4quWbnuaXi+mVluS4uiBbWzEsMF0sWzAsMF0sWzIsMF1dIOWSjCBbWzEsMF0sWzIsMF0sWzAsMF1dXG5cbuadpea6kO+8muWKm+aJo++8iExlZXRDb2Rl77yJXG7pk77mjqXvvJpodHRwczovL2xlZXRjb2RlLWNuLmNvbS9wcm9ibGVtcy9udW1iZXItb2YtYm9vbWVyYW5nc1xu6JGX5L2c5p2D5b2S6aKG5omj572R57uc5omA5pyJ44CC5ZWG5Lia6L2s6L296K+36IGU57O75a6Y5pa55o6I5p2D77yM6Z2e5ZWG5Lia6L2s6L296K+35rOo5piO5Ye65aSE44CCXG4qICovXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyW11bXX0gcG9pbnRzXG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbnZhciBudW1iZXJPZkJvb21lcmFuZ3MgPSBmdW5jdGlvbiAocG9pbnRzOiBudW1iZXJbXVtdKSB7XG4gIGxldCByZXN1bHQgPSAwO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHBvaW50cy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IG1hcDogeyBba2V5OiBzdHJpbmddOiBudW1iZXIgfSA9IHt9O1xuICAgIGZvciAobGV0IGogPSAwOyBqIDwgcG9pbnRzLmxlbmd0aDsgaisrKSB7XG4gICAgICBpZiAoaSA9PT0gaikgY29udGludWU7XG4gICAgICBjb25zdCBkaXN0YW5jZSA9IE1hdGguYWJzKFxuICAgICAgICAocG9pbnRzW2ldWzBdIC0gcG9pbnRzW2pdWzBdKSAqKiAyICsgKHBvaW50c1tpXVsxXSAtIHBvaW50c1tqXVsxXSkgKiogMlxuICAgICAgKTtcbiAgICAgIG1hcFtkaXN0YW5jZV0gPSBtYXBbZGlzdGFuY2VdID09IG51bGwgPyAxIDogbWFwW2Rpc3RhbmNlXSArIDE7XG4gICAgfVxuXG4gICAgcmVzdWx0ICs9IE9iamVjdC52YWx1ZXMobWFwKS5yZWR1Y2UoKHN1bSwgY3VyKSA9PiB7XG4gICAgICByZXR1cm4gc3VtICsgY3VyICogKGN1ciAtIDEpO1xuICAgIH0sIDApO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbmltcG9ydCBhc3NlcnQgZnJvbSBcImFzc2VydFwiO1xuXG5hc3NlcnQuc3RyaWN0RXF1YWwoXG4gIG51bWJlck9mQm9vbWVyYW5ncyhbXG4gICAgWzAsIDBdLFxuICAgIFsxLCAwXSxcbiAgICBbMiwgMF0sXG4gIF0pLFxuICAyXG4pO1xuYXNzZXJ0LnN0cmljdEVxdWFsKFxuICBudW1iZXJPZkJvb21lcmFuZ3MoW1xuICAgIFswLCAwXSxcbiAgICBbMSwgMF0sXG4gICAgWzIsIDBdLFxuICAgIFstMSwgMF0sXG4gIF0pLFxuICA0XG4pO1xuYXNzZXJ0LnN0cmljdEVxdWFsKFxuICBudW1iZXJPZkJvb21lcmFuZ3MoW1xuICAgIFswLCAwXSxcbiAgICBbMSwgMF0sXG4gICAgWzIsIDBdLFxuICAgIFszLCAxXSxcbiAgICBbNCwgMV0sXG4gICAgWzAsIDFdLFxuICBdKSxcbiAgNlxuKTtcbiJdfQ==