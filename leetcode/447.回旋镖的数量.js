"use strict";
var __importDefault =
  (this && this.__importDefault) ||
  function (mod) {
    return mod && mod.__esModule ? mod : { default: mod };
  };
Object.defineProperty(exports, "__esModule", { value: true });
/*
给定平面上 n 对不同的点，“回旋镖” 是由点表示的元组 (i, j, k) ，
其中 i 和 j 之间的距离和 i 和 k 之间的距离相等（需要考虑元组的顺序）。

找到所有回旋镖的数量。你可以假设 n 最大为 500，所有点的坐标在闭区间 [-10000, 10000] 中。

示例:

输入:
[[0,0],[1,0],[2,0]]

输出:
2

解释:
两个回旋镖为 [[1,0],[0,0],[2,0]] 和 [[1,0],[2,0],[0,0]]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/number-of-boomerangs
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
* */
/**
 * @param {number[][]} points
 * @return {number}
 */
var numberOfBoomerangs = function (points) {
  let result = 0;
  for (let i = 0; i < points.length; i++) {
    const map = {};
    for (let j = 0; j < points.length; j++) {
      if (i === j) continue;
      const distance = Math.abs(
        (points[i][0] - points[j][0]) ** 2 + (points[i][1] - points[j][1]) ** 2
      );
      map[distance] = map[distance] == null ? 1 : map[distance] + 1;
    }
    result += Object.values(map).reduce((sum, cur) => {
      return sum + cur * (cur - 1);
    }, 0);
  }
  return result;
};
const assert_1 = __importDefault(require("assert"));
assert_1.default.strictEqual(
  numberOfBoomerangs([
    [0, 0],
    [1, 0],
    [2, 0],
  ]),
  2
);
assert_1.default.strictEqual(
  numberOfBoomerangs([
    [0, 0],
    [1, 0],
    [2, 0],
    [-1, 0],
  ]),
  4
);
assert_1.default.strictEqual(
  numberOfBoomerangs([
    [0, 0],
    [1, 0],
    [2, 0],
    [3, 1],
    [4, 1],
    [0, 1],
  ]),
  6
);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDQ3LuWbnuaXi+mVlueahOaVsOmHjy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsibGVldGNvZGUvNDQ3LuWbnuaXi+mVlueahOaVsOmHjy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQW9CSTtBQUNKOzs7R0FHRztBQUNILElBQUksa0JBQWtCLEdBQUcsVUFBVSxNQUFrQjtJQUNqRCxJQUFJLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDZixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNwQyxNQUFNLEdBQUcsR0FBOEIsRUFBRSxDQUFDO1FBQzFDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3BDLElBQUksQ0FBQyxLQUFLLENBQUM7Z0JBQUUsU0FBUztZQUN0QixNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUNuRyxHQUFHLENBQUMsUUFBUSxDQUFDLEdBQUcsR0FBRyxDQUFDLFFBQVEsQ0FBQyxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ2pFO1FBRUQsTUFBTSxJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxFQUFFO1lBQzdDLE9BQU8sR0FBRyxHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUNqQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7S0FDVDtJQUdELE9BQU8sTUFBTSxDQUFDO0FBQ2xCLENBQUMsQ0FBQztBQUdGLG9EQUE0QjtBQUU1QixnQkFBTSxDQUFDLFdBQVcsQ0FDZCxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFDNUMsQ0FBQyxDQUNKLENBQUM7QUFDRixnQkFBTSxDQUFDLFdBQVcsQ0FDZCxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUNyRCxDQUFDLENBQ0osQ0FBQztBQUNGLGdCQUFNLENBQUMsV0FBVyxDQUNkLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUNwRSxDQUFDLENBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG7nu5nlrprlubPpnaLkuIrCoG4g5a+55LiN5ZCM55qE54K577yM4oCc5Zue5peL6ZWW4oCdIOaYr+eUseeCueihqOekuueahOWFg+e7hMKgKGksIGosIGspwqDvvIxcbuWFtuS4rcKgacKg5ZKMwqBqwqDkuYvpl7TnmoTot53nprvlkozCoGnCoOWSjMKga8Kg5LmL6Ze055qE6Led56a755u4562J77yI6ZyA6KaB6ICD6JmR5YWD57uE55qE6aG65bqP77yJ44CCXG5cbuaJvuWIsOaJgOacieWbnuaXi+mVlueahOaVsOmHj+OAguS9oOWPr+S7peWBh+iuvsKgbiDmnIDlpKfkuLogNTAw77yM5omA5pyJ54K555qE5Z2Q5qCH5Zyo6Zet5Yy66Ze0IFstMTAwMDAsIDEwMDAwXSDkuK3jgIJcblxu56S65L6LOlxuXG7ovpPlhaU6XG5bWzAsMF0sWzEsMF0sWzIsMF1dXG5cbui+k+WHujpcbjJcblxu6Kej6YeKOlxu5Lik5Liq5Zue5peL6ZWW5Li6IFtbMSwwXSxbMCwwXSxbMiwwXV0g5ZKMIFtbMSwwXSxbMiwwXSxbMCwwXV1cblxu5p2l5rqQ77ya5Yqb5omj77yITGVldENvZGXvvIlcbumTvuaOpe+8mmh0dHBzOi8vbGVldGNvZGUtY24uY29tL3Byb2JsZW1zL251bWJlci1vZi1ib29tZXJhbmdzXG7okZfkvZzmnYPlvZLpoobmiaPnvZHnu5zmiYDmnInjgILllYbkuJrovazovb3or7fogZTns7vlrpjmlrnmjojmnYPvvIzpnZ7llYbkuJrovazovb3or7fms6jmmI7lh7rlpITjgIJcbiogKi9cbi8qKlxuICogQHBhcmFtIHtudW1iZXJbXVtdfSBwb2ludHNcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xudmFyIG51bWJlck9mQm9vbWVyYW5ncyA9IGZ1bmN0aW9uIChwb2ludHM6IG51bWJlcltdW10pIHtcbiAgICBsZXQgcmVzdWx0ID0gMDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBvaW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBtYXA6IHsgW2tleTogc3RyaW5nXTogbnVtYmVyIH0gPSB7fTtcbiAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBwb2ludHMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgIGlmIChpID09PSBqKSBjb250aW51ZTtcbiAgICAgICAgICAgIGNvbnN0IGRpc3RhbmNlID0gTWF0aC5hYnMoKHBvaW50c1tpXVswXSAtIHBvaW50c1tqXVswXSkgKiogMiArIChwb2ludHNbaV1bMV0gLSBwb2ludHNbal1bMV0pICoqIDIpO1xuICAgICAgICAgICAgbWFwW2Rpc3RhbmNlXSA9IG1hcFtkaXN0YW5jZV0gPT0gbnVsbCA/IDEgOiBtYXBbZGlzdGFuY2VdICsgMTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJlc3VsdCArPSBPYmplY3QudmFsdWVzKG1hcCkucmVkdWNlKChzdW0sIGN1cikgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHN1bSArIGN1ciAqIChjdXIgLSAxKTtcbiAgICAgICAgfSwgMCk7XG4gICAgfVxuXG5cbiAgICByZXR1cm4gcmVzdWx0O1xufTtcblxuXG5pbXBvcnQgYXNzZXJ0IGZyb20gXCJhc3NlcnRcIjtcblxuYXNzZXJ0LnN0cmljdEVxdWFsKFxuICAgIG51bWJlck9mQm9vbWVyYW5ncyhbWzAsIDBdLCBbMSwgMF0sIFsyLCAwXV0pLFxuICAgIDIsXG4pO1xuYXNzZXJ0LnN0cmljdEVxdWFsKFxuICAgIG51bWJlck9mQm9vbWVyYW5ncyhbWzAsIDBdLCBbMSwgMF0sIFsyLCAwXSwgWy0xLCAwXV0pLFxuICAgIDQsXG4pO1xuYXNzZXJ0LnN0cmljdEVxdWFsKFxuICAgIG51bWJlck9mQm9vbWVyYW5ncyhbWzAsIDBdLCBbMSwgMF0sIFsyLCAwXSwgWzMsIDFdLCBbNCwgMV0sIFswLCAxXV0pLFxuICAgIDYsXG4pO1xuIl19
