"use strict";
/*
1028. 从先序遍历还原二叉树
我们从二叉树的根节点 root 开始进行深度优先搜索。

在遍历中的每个节点处，我们输出 D 条短划线（其中 D 是该节点的深度），然后输出该节点的值。（如果节点的深度为 D，则其直接子节点的深度为 D + 1。根节点的深度为 0）。

如果节点只有一个子节点，那么保证该子节点为左子节点。

给出遍历输出 S，还原树并返回其根节点 root。



示例 1：



输入："1-2--3--4-5--6--7"
输出：[1,2,5,3,4,6,7]
示例 2：



输入："1-2--3---4-5--6---7"
输出：[1,2,5,3,null,6,null,4,null,7]
示例 3：



输入："1-401--349---90--88"
输出：[1,401,null,349,88,90]


提示：

原始树中的节点数介于 1 和 1000 之间。
每个节点的值介于 1 和 10 ^ 9 之间。
* */
class TreeNode {
    constructor(val, left, right) {
        this.val = val === undefined ? 0 : val;
        this.left = left === undefined ? null : left;
        this.right = right === undefined ? null : right;
    }
}
function recoverFromPreorder(S) {
    const rootNode = new TreeNode(parseInt(S));
    const [left, right] = getLeftRight(S, 1);
    step(rootNode, left, right, 1);
    return rootNode;
    function step(node, left, right, level = 1) {
        if (left == null) {
            node.left = null;
        }
        else {
            const leftNodeValue = getVal(left);
            const [subLeft, subRight] = getLeftRight(left, level + 1);
            const leftNode = new TreeNode(Number(leftNodeValue));
            node.left = leftNode;
            step(leftNode, subLeft, subRight, level + 1);
        }
        if (right == null) {
            node.right = null;
        }
        else {
            const rightNodeValue = getVal(right);
            const [subLeft, subRight] = getLeftRight(right, level + 1);
            const rightNode = new TreeNode(Number(rightNodeValue));
            node.right = rightNode;
            step(rightNode, subLeft, subRight, level + 1);
        }
    }
}
function getVal(str) {
    const data = str.match(/^-*(\d+)/);
    return data === null || data === void 0 ? void 0 : data[1];
}
function getLeftRight(str, level) {
    var _a;
    const reg = new RegExp(`(-{${level}}\\d+)(-{${level + 1},}\\d+)*`, "g");
    return (_a = str.match(reg)) !== null && _a !== void 0 ? _a : [];
}
console.log(recoverFromPreorder("1-2--3--4-5--6--7"));
console.log(recoverFromPreorder("1-2--3---4-5--6---7"));
console.log(recoverFromPreorder("1-401--349---90--88"));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAyOC7ku47lhYjluo/pgY3ljobov5jljp/kuozlj4nmoJEuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbImxlZXRjb2RlLzEwMjgu5LuO5YWI5bqP6YGN5Y6G6L+Y5Y6f5LqM5Y+J5qCRLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBb0NJO0FBRUosTUFBTSxRQUFRO0lBSVosWUFBWSxHQUFZLEVBQUUsSUFBc0IsRUFBRSxLQUF1QjtRQUN2RSxJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDN0MsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUNsRCxDQUFDO0NBQ0Y7QUFFRCxTQUFTLG1CQUFtQixDQUFDLENBQVM7SUFDcEMsTUFBTSxRQUFRLEdBQUcsSUFBSSxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDM0MsTUFBTSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsR0FBRyxZQUFZLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3pDLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztJQUUvQixPQUFPLFFBQVEsQ0FBQztJQUNoQixTQUFTLElBQUksQ0FDWCxJQUFjLEVBQ2QsSUFBbUIsRUFDbkIsS0FBb0IsRUFDcEIsS0FBSyxHQUFHLENBQUM7UUFFVCxJQUFJLElBQUksSUFBSSxJQUFJLEVBQUU7WUFDaEIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7U0FDbEI7YUFBTTtZQUNMLE1BQU0sYUFBYSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUUsQ0FBQztZQUNwQyxNQUFNLENBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQyxHQUFHLFlBQVksQ0FBQyxJQUFJLEVBQUUsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQzFELE1BQU0sUUFBUSxHQUFHLElBQUksUUFBUSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO1lBQ3JELElBQUksQ0FBQyxJQUFJLEdBQUcsUUFBUSxDQUFDO1lBQ3JCLElBQUksQ0FBQyxRQUFRLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRSxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDOUM7UUFDRCxJQUFJLEtBQUssSUFBSSxJQUFJLEVBQUU7WUFDakIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7U0FDbkI7YUFBTTtZQUNMLE1BQU0sY0FBYyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUUsQ0FBQztZQUN0QyxNQUFNLENBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQyxHQUFHLFlBQVksQ0FBQyxLQUFLLEVBQUUsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQzNELE1BQU0sU0FBUyxHQUFHLElBQUksUUFBUSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO1lBQ3ZELElBQUksQ0FBQyxLQUFLLEdBQUcsU0FBUyxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxTQUFTLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRSxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDL0M7SUFDSCxDQUFDO0FBQ0gsQ0FBQztBQUVELFNBQVMsTUFBTSxDQUFDLEdBQVc7SUFDekIsTUFBTSxJQUFJLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNuQyxPQUFPLElBQUksYUFBSixJQUFJLHVCQUFKLElBQUksQ0FBRyxDQUFDLEVBQUU7QUFDbkIsQ0FBQztBQUVELFNBQVMsWUFBWSxDQUFDLEdBQVcsRUFBRSxLQUFhOztJQUM5QyxNQUFNLEdBQUcsR0FBRyxJQUFJLE1BQU0sQ0FBQyxNQUFNLEtBQUssWUFBWSxLQUFLLEdBQUcsQ0FBQyxVQUFVLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDeEUsYUFBTyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxtQ0FBSSxFQUFFLENBQUM7QUFDOUIsQ0FBQztBQUVELE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDO0FBQ3RELE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMscUJBQXFCLENBQUMsQ0FBQyxDQUFDO0FBQ3hELE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMscUJBQXFCLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbjEwMjguIOS7juWFiOW6j+mBjeWOhui/mOWOn+S6jOWPieagkVxu5oiR5Lus5LuO5LqM5Y+J5qCR55qE5qC56IqC54K5IHJvb3Qg5byA5aeL6L+b6KGM5rex5bqm5LyY5YWI5pCc57Si44CCXG5cbuWcqOmBjeWOhuS4reeahOavj+S4quiKgueCueWkhO+8jOaIkeS7rOi+k+WHuiBEIOadoeefreWIkue6v++8iOWFtuS4rSBEIOaYr+ivpeiKgueCueeahOa3seW6pu+8ie+8jOeEtuWQjui+k+WHuuivpeiKgueCueeahOWAvOOAgu+8iOWmguaenOiKgueCueeahOa3seW6puS4uiBE77yM5YiZ5YW255u05o6l5a2Q6IqC54K555qE5rex5bqm5Li6IEQgKyAx44CC5qC56IqC54K555qE5rex5bqm5Li6IDDvvInjgIJcblxu5aaC5p6c6IqC54K55Y+q5pyJ5LiA5Liq5a2Q6IqC54K577yM6YKj5LmI5L+d6K+B6K+l5a2Q6IqC54K55Li65bem5a2Q6IqC54K544CCXG5cbue7meWHuumBjeWOhui+k+WHuiBT77yM6L+Y5Y6f5qCR5bm26L+U5Zue5YW25qC56IqC54K5IHJvb3TjgIJcblxuXG5cbuekuuS+iyAx77yaXG5cblxuXG7ovpPlhaXvvJpcIjEtMi0tMy0tNC01LS02LS03XCJcbui+k+WHuu+8mlsxLDIsNSwzLDQsNiw3XVxu56S65L6LIDLvvJpcblxuXG5cbui+k+WFpe+8mlwiMS0yLS0zLS0tNC01LS02LS0tN1wiXG7ovpPlh7rvvJpbMSwyLDUsMyxudWxsLDYsbnVsbCw0LG51bGwsN11cbuekuuS+iyAz77yaXG5cblxuXG7ovpPlhaXvvJpcIjEtNDAxLS0zNDktLS05MC0tODhcIlxu6L6T5Ye677yaWzEsNDAxLG51bGwsMzQ5LDg4LDkwXVxuXG5cbuaPkOekuu+8mlxuXG7ljp/lp4vmoJHkuK3nmoToioLngrnmlbDku4vkuo4gMSDlkowgMTAwMCDkuYvpl7TjgIJcbuavj+S4quiKgueCueeahOWAvOS7i+S6jiAxIOWSjCAxMCBeIDkg5LmL6Ze044CCXG4qICovXG5cbmNsYXNzIFRyZWVOb2RlIHtcbiAgdmFsOiBudW1iZXI7XG4gIGxlZnQ6IFRyZWVOb2RlIHwgbnVsbDtcbiAgcmlnaHQ6IFRyZWVOb2RlIHwgbnVsbDtcbiAgY29uc3RydWN0b3IodmFsPzogbnVtYmVyLCBsZWZ0PzogVHJlZU5vZGUgfCBudWxsLCByaWdodD86IFRyZWVOb2RlIHwgbnVsbCkge1xuICAgIHRoaXMudmFsID0gdmFsID09PSB1bmRlZmluZWQgPyAwIDogdmFsO1xuICAgIHRoaXMubGVmdCA9IGxlZnQgPT09IHVuZGVmaW5lZCA/IG51bGwgOiBsZWZ0O1xuICAgIHRoaXMucmlnaHQgPSByaWdodCA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IHJpZ2h0O1xuICB9XG59XG5cbmZ1bmN0aW9uIHJlY292ZXJGcm9tUHJlb3JkZXIoUzogc3RyaW5nKTogVHJlZU5vZGUgfCBudWxsIHtcbiAgY29uc3Qgcm9vdE5vZGUgPSBuZXcgVHJlZU5vZGUocGFyc2VJbnQoUykpO1xuICBjb25zdCBbbGVmdCwgcmlnaHRdID0gZ2V0TGVmdFJpZ2h0KFMsIDEpO1xuICBzdGVwKHJvb3ROb2RlLCBsZWZ0LCByaWdodCwgMSk7XG5cbiAgcmV0dXJuIHJvb3ROb2RlO1xuICBmdW5jdGlvbiBzdGVwKFxuICAgIG5vZGU6IFRyZWVOb2RlLFxuICAgIGxlZnQ6IHN0cmluZyB8IHZvaWQsXG4gICAgcmlnaHQ6IHN0cmluZyB8IHZvaWQsXG4gICAgbGV2ZWwgPSAxXG4gICkge1xuICAgIGlmIChsZWZ0ID09IG51bGwpIHtcbiAgICAgIG5vZGUubGVmdCA9IG51bGw7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGxlZnROb2RlVmFsdWUgPSBnZXRWYWwobGVmdCkhO1xuICAgICAgY29uc3QgW3N1YkxlZnQsIHN1YlJpZ2h0XSA9IGdldExlZnRSaWdodChsZWZ0LCBsZXZlbCArIDEpO1xuICAgICAgY29uc3QgbGVmdE5vZGUgPSBuZXcgVHJlZU5vZGUoTnVtYmVyKGxlZnROb2RlVmFsdWUpKTtcbiAgICAgIG5vZGUubGVmdCA9IGxlZnROb2RlO1xuICAgICAgc3RlcChsZWZ0Tm9kZSwgc3ViTGVmdCwgc3ViUmlnaHQsIGxldmVsICsgMSk7XG4gICAgfVxuICAgIGlmIChyaWdodCA9PSBudWxsKSB7XG4gICAgICBub2RlLnJpZ2h0ID0gbnVsbDtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgcmlnaHROb2RlVmFsdWUgPSBnZXRWYWwocmlnaHQpITtcbiAgICAgIGNvbnN0IFtzdWJMZWZ0LCBzdWJSaWdodF0gPSBnZXRMZWZ0UmlnaHQocmlnaHQsIGxldmVsICsgMSk7XG4gICAgICBjb25zdCByaWdodE5vZGUgPSBuZXcgVHJlZU5vZGUoTnVtYmVyKHJpZ2h0Tm9kZVZhbHVlKSk7XG4gICAgICBub2RlLnJpZ2h0ID0gcmlnaHROb2RlO1xuICAgICAgc3RlcChyaWdodE5vZGUsIHN1YkxlZnQsIHN1YlJpZ2h0LCBsZXZlbCArIDEpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBnZXRWYWwoc3RyOiBzdHJpbmcpIHtcbiAgY29uc3QgZGF0YSA9IHN0ci5tYXRjaCgvXi0qKFxcZCspLyk7XG4gIHJldHVybiBkYXRhPy5bMV07XG59XG5cbmZ1bmN0aW9uIGdldExlZnRSaWdodChzdHI6IHN0cmluZywgbGV2ZWw6IG51bWJlcikge1xuICBjb25zdCByZWcgPSBuZXcgUmVnRXhwKGAoLXske2xldmVsfX1cXFxcZCspKC17JHtsZXZlbCArIDF9LH1cXFxcZCspKmAsIFwiZ1wiKTtcbiAgcmV0dXJuIHN0ci5tYXRjaChyZWcpID8/IFtdO1xufVxuXG5jb25zb2xlLmxvZyhyZWNvdmVyRnJvbVByZW9yZGVyKFwiMS0yLS0zLS00LTUtLTYtLTdcIikpO1xuY29uc29sZS5sb2cocmVjb3ZlckZyb21QcmVvcmRlcihcIjEtMi0tMy0tLTQtNS0tNi0tLTdcIikpO1xuY29uc29sZS5sb2cocmVjb3ZlckZyb21QcmVvcmRlcihcIjEtNDAxLS0zNDktLS05MC0tODhcIikpO1xuIl19