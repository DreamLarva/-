"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/*
给定一个非负整数 numRows，生成杨辉三角的前 numRows 行。



在杨辉三角中，每个数是它左上方和右上方的数的和。

示例:

输入: 5
输出:
[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]
* */
/**
 * @param {number} numRows
 * @return {number[][]}
 */
var generate = function (numRows) {
    if (numRows === 0)
        return [];
    const a1 = [1];
    if (numRows === 1)
        return [a1];
    const a2 = [1, 1];
    if (numRows === 2)
        return [a1, a2];
    const result = [a1, a2];
    for (let i = numRows - 2; i > 0; i--) {
        const lastArr = last(result);
        const temp = [];
        for (let j = 1; j < lastArr.length; j++) {
            temp.push(lastArr[j - 1] + lastArr[j]);
        }
        result.push([1, ...temp, 1]);
    }
    return result;
};
function last(arr) {
    return arr[arr.length - 1];
}
const assert_1 = __importDefault(require("assert"));
assert_1.default.deepStrictEqual(generate(5), [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE4LuadqOi+ieS4ieinki5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsibGVldGNvZGUvMTE4LuadqOi+ieS4ieinki50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFrQkk7QUFDSjs7O0dBR0c7QUFDSCxJQUFJLFFBQVEsR0FBRyxVQUFVLE9BQWU7SUFDcEMsSUFBSSxPQUFPLEtBQUssQ0FBQztRQUFFLE9BQU8sRUFBRSxDQUFDO0lBQzdCLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDZixJQUFJLE9BQU8sS0FBSyxDQUFDO1FBQUUsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQy9CLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ2xCLElBQUksT0FBTyxLQUFLLENBQUM7UUFBRSxPQUFPLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBRW5DLE1BQU0sTUFBTSxHQUFHLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3hCLEtBQUssSUFBSSxDQUFDLEdBQUcsT0FBTyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ2xDLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3QixNQUFNLElBQUksR0FBRyxFQUFFLENBQUM7UUFDaEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDckMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBRTFDO1FBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ2hDO0lBQ0QsT0FBTyxNQUFNLENBQUM7QUFDbEIsQ0FBQyxDQUFDO0FBR0YsU0FBUyxJQUFJLENBQUksR0FBUTtJQUNyQixPQUFPLEdBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQy9CLENBQUM7QUFFRCxvREFBNEI7QUFDNUIsZ0JBQU0sQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUUsQ0FBRSxDQUFDLENBQUUsRUFBRSxDQUFFLENBQUMsRUFBRSxDQUFDLENBQUUsRUFBRSxDQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFFLEVBQUUsQ0FBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUUsRUFBRSxDQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUUsQ0FBRSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxu57uZ5a6a5LiA5Liq6Z2e6LSf5pW05pWwIG51bVJvd3PvvIznlJ/miJDmnajovonkuInop5LnmoTliY0gbnVtUm93cyDooYzjgIJcblxuXG5cbuWcqOadqOi+ieS4ieinkuS4re+8jOavj+S4quaVsOaYr+Wug+W3puS4iuaWueWSjOWPs+S4iuaWueeahOaVsOeahOWSjOOAglxuXG7npLrkvos6XG5cbui+k+WFpTogNVxu6L6T5Ye6OlxuW1xuICAgICBbMV0sXG4gICAgWzEsMV0sXG4gICBbMSwyLDFdLFxuICBbMSwzLDMsMV0sXG4gWzEsNCw2LDQsMV1cbl1cbiogKi9cbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IG51bVJvd3NcbiAqIEByZXR1cm4ge251bWJlcltdW119XG4gKi9cbnZhciBnZW5lcmF0ZSA9IGZ1bmN0aW9uIChudW1Sb3dzOiBudW1iZXIpIHtcbiAgICBpZiAobnVtUm93cyA9PT0gMCkgcmV0dXJuIFtdO1xuICAgIGNvbnN0IGExID0gWzFdO1xuICAgIGlmIChudW1Sb3dzID09PSAxKSByZXR1cm4gW2ExXTtcbiAgICBjb25zdCBhMiA9IFsxLCAxXTtcbiAgICBpZiAobnVtUm93cyA9PT0gMikgcmV0dXJuIFthMSwgYTJdO1xuXG4gICAgY29uc3QgcmVzdWx0ID0gW2ExLCBhMl07XG4gICAgZm9yIChsZXQgaSA9IG51bVJvd3MgLSAyOyBpID4gMDsgaS0tKSB7XG4gICAgICAgIGNvbnN0IGxhc3RBcnIgPSBsYXN0KHJlc3VsdCk7XG4gICAgICAgIGNvbnN0IHRlbXAgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgaiA9IDE7IGogPCBsYXN0QXJyLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICB0ZW1wLnB1c2gobGFzdEFycltqIC0gMV0gKyBsYXN0QXJyW2pdKTtcblxuICAgICAgICB9XG4gICAgICAgIHJlc3VsdC5wdXNoKFsxLCAuLi50ZW1wLCAxXSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59O1xuXG5cbmZ1bmN0aW9uIGxhc3Q8VD4oYXJyOiBUW10pIHtcbiAgICByZXR1cm4gYXJyW2Fyci5sZW5ndGggLSAxXTtcbn1cblxuaW1wb3J0IGFzc2VydCBmcm9tIFwiYXNzZXJ0XCI7XG5hc3NlcnQuZGVlcFN0cmljdEVxdWFsKGdlbmVyYXRlKDUpLFsgWyAxIF0sIFsgMSwgMSBdLCBbIDEsIDIsIDEgXSwgWyAxLCAzLCAzLCAxIF0sIFsgMSwgNCwgNiwgNCwgMSBdIF0pO1xuXG4iXX0=