"use strict";
var __importDefault =
  (this && this.__importDefault) ||
  function (mod) {
    return mod && mod.__esModule ? mod : { default: mod };
  };
Object.defineProperty(exports, "__esModule", { value: true });
/*
假设按照升序排序的数组在预先未知的某个点上进行了旋转。

( 例如，数组 [0,1,2,4,5,6,7] 可能变为 [4,5,6,7,0,1,2] )。

搜索一个给定的目标值，如果数组中存在这个目标值，则返回它的索引，否则返回 -1 。

你可以假设数组中不存在重复的元素。

你的算法时间复杂度必须是 O(log n) 级别。

示例 1:

输入: nums = [4,5,6,7,0,1,2], target = 0
输出: 4
示例 2:

输入: nums = [4,5,6,7,0,1,2], target = 3
输出: -1

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/search-in-rotated-sorted-array
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
* */
/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number}
 */
var search = function (nums, target) {
  /**
   * 分析
   * 由于是 升序 数组 且只有一次旋转
   * 选择 任意一个点 就能够判断是不是 分成左侧部分 和 右侧部分
   * 左右部分必定至少有一个依然是升序的情况 这就能判断 数据是不是绝对的落在某一侧
   * */
  if (nums.length === 0) return -1;
  if (nums.length === 1) return nums[0] === target ? 0 : -1;
  let left = 0;
  let right = nums.length - 1;
  while (left <= right) {
    const middle = left + ((right - left) >>> 1);
    if (nums[middle] === target) return middle;
    // 由于上面 二分 是向下取整 所有只可能出现
    // 极端情况下 只有一个值(共一个值) 或者 只有右侧有值左侧没有值(共2个值)
    // 判断右侧 是否保持升序
    let sureNotInRight = false;
    if (nums[middle + 1] <= nums[right]) {
      // 如果保持升序 就判断 target 是不是落在区间内
      if (nums[middle + 1] <= target && target <= nums[right]) {
        left = middle + 1;
      } else {
        right = middle - 1;
        sureNotInRight = true;
      }
    }
    // 判断左侧 是否保持升序
    let sureNotInLeft = false;
    if (middle - 1 >= left && nums[left] <= nums[middle - 1]) {
      if (nums[left] <= target && target <= nums[middle - 1]) {
        right = middle - 1;
      } else {
        left = middle + 1;
        sureNotInLeft = true;
      }
    }
    if (sureNotInLeft && sureNotInRight) return -1;
  }
  return -1;
};
const assert_1 = __importDefault(require("assert"));
assert_1.default.strictEqual(search([4, 5, 6, 7, 0, 1, 2], 0), 4);
assert_1.default.strictEqual(search([4, 5, 6, 7, 0, 1, 2, 3, 4], 0), 4);
assert_1.default.strictEqual(search([4, 5, 6, 7, 0, 1, 2], 3), -1);
assert_1.default.strictEqual(search([1, 3], 0), -1);
assert_1.default.strictEqual(search([1], 0), -1);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzMu5pCc57Si5peL6L2s5o6S5bqP5pWw57uELmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJsZWV0Y29kZS8zMy7mkJzntKLml4vovazmjpLluo/mlbDnu4QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUF1Qkk7QUFDSjs7OztHQUlHO0FBQ0gsSUFBSSxNQUFNLEdBQUcsVUFBVSxJQUFjLEVBQUUsTUFBYztJQUNqRDs7Ozs7U0FLSztJQUNMLElBQUksSUFBSSxDQUFDLE1BQU0sS0FBSyxDQUFDO1FBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUNqQyxJQUFJLElBQUksQ0FBQyxNQUFNLEtBQUssQ0FBQztRQUFFLE9BQU8sSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxRCxJQUFJLElBQUksR0FBRyxDQUFDLENBQUM7SUFDYixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUM1QixPQUFPLElBQUksSUFBSSxLQUFLLEVBQUU7UUFDbEIsTUFBTSxNQUFNLEdBQUcsSUFBSSxHQUFHLENBQUMsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFFN0MsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssTUFBTTtZQUFFLE9BQU8sTUFBTSxDQUFDO1FBQzNDLHdCQUF3QjtRQUN4Qix5Q0FBeUM7UUFDekMsY0FBYztRQUNkLElBQUksY0FBYyxHQUFHLEtBQUssQ0FBQztRQUMzQixJQUFJLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ2pDLDZCQUE2QjtZQUM3QixJQUFJLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLElBQUksTUFBTSxJQUFJLE1BQU0sSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUU7Z0JBQ3JELElBQUksR0FBRyxNQUFNLEdBQUcsQ0FBQyxDQUFDO2FBQ3JCO2lCQUFNO2dCQUNILEtBQUssR0FBRyxNQUFNLEdBQUcsQ0FBQyxDQUFDO2dCQUNuQixjQUFjLEdBQUcsSUFBSSxDQUFDO2FBQ3pCO1NBQ0o7UUFFRCxjQUFjO1FBQ2QsSUFBSSxhQUFhLEdBQUcsS0FBSyxDQUFDO1FBQzFCLElBQUksTUFBTSxHQUFHLENBQUMsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLEVBQUU7WUFDdEQsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksTUFBTSxJQUFJLE1BQU0sSUFBSSxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxFQUFFO2dCQUNwRCxLQUFLLEdBQUcsTUFBTSxHQUFHLENBQUMsQ0FBQzthQUN0QjtpQkFBTTtnQkFDSCxJQUFJLEdBQUcsTUFBTSxHQUFHLENBQUMsQ0FBQztnQkFDbEIsYUFBYSxHQUFHLElBQUksQ0FBQzthQUN4QjtTQUNKO1FBRUQsSUFBSSxhQUFhLElBQUksY0FBYztZQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7S0FDbEQ7SUFFRCxPQUFPLENBQUMsQ0FBQyxDQUFDO0FBQ2QsQ0FBQyxDQUFDO0FBRUYsb0RBQTRCO0FBRTVCLGdCQUFNLENBQUMsV0FBVyxDQUNkLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUNoQyxDQUFDLENBQ0osQ0FBQztBQUNGLGdCQUFNLENBQUMsV0FBVyxDQUNkLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQ3RDLENBQUMsQ0FDSixDQUFDO0FBQ0YsZ0JBQU0sQ0FBQyxXQUFXLENBQ2QsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQ2hDLENBQUMsQ0FBQyxDQUNMLENBQUM7QUFDRixnQkFBTSxDQUFDLFdBQVcsQ0FDZCxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQ2pCLENBQUMsQ0FBQyxDQUNMLENBQUM7QUFDRixnQkFBTSxDQUFDLFdBQVcsQ0FDZCxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFDZCxDQUFDLENBQUMsQ0FDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbuWBh+iuvuaMieeFp+WNh+W6j+aOkuW6j+eahOaVsOe7hOWcqOmihOWFiOacquefpeeahOafkOS4queCueS4iui/m+ihjOS6huaXi+i9rOOAglxuXG4oIOS+i+Wmgu+8jOaVsOe7hMKgWzAsMSwyLDQsNSw2LDddwqDlj6/og73lj5jkuLrCoFs0LDUsNiw3LDAsMSwyXcKgKeOAglxuXG7mkJzntKLkuIDkuKrnu5nlrprnmoTnm67moIflgLzvvIzlpoLmnpzmlbDnu4TkuK3lrZjlnKjov5nkuKrnm67moIflgLzvvIzliJnov5Tlm57lroPnmoTntKLlvJXvvIzlkKbliJnov5Tlm57CoC0xwqDjgIJcblxu5L2g5Y+v5Lul5YGH6K6+5pWw57uE5Lit5LiN5a2Y5Zyo6YeN5aSN55qE5YWD57Sg44CCXG5cbuS9oOeahOeul+azleaXtumXtOWkjeadguW6puW/hemhu+aYr8KgTyhsb2fCoG4pIOe6p+WIq+OAglxuXG7npLrkvosgMTpcblxu6L6T5YWlOiBudW1zID0gWzQsNSw2LDcsMCwxLDJdLCB0YXJnZXQgPSAwXG7ovpPlh7o6IDRcbuekuuS+i8KgMjpcblxu6L6T5YWlOiBudW1zID0gWzQsNSw2LDcsMCwxLDJdLCB0YXJnZXQgPSAzXG7ovpPlh7o6IC0xXG5cbuadpea6kO+8muWKm+aJo++8iExlZXRDb2Rl77yJXG7pk77mjqXvvJpodHRwczovL2xlZXRjb2RlLWNuLmNvbS9wcm9ibGVtcy9zZWFyY2gtaW4tcm90YXRlZC1zb3J0ZWQtYXJyYXlcbuiRl+S9nOadg+W9kumihuaJo+e9kee7nOaJgOacieOAguWVhuS4mui9rOi9veivt+iBlOezu+WumOaWueaOiOadg++8jOmdnuWVhuS4mui9rOi9veivt+azqOaYjuWHuuWkhOOAglxuKiAqL1xuLyoqXG4gKiBAcGFyYW0ge251bWJlcltdfSBudW1zXG4gKiBAcGFyYW0ge251bWJlcn0gdGFyZ2V0XG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbnZhciBzZWFyY2ggPSBmdW5jdGlvbiAobnVtczogbnVtYmVyW10sIHRhcmdldDogbnVtYmVyKSB7XG4gICAgLyoqXG4gICAgICog5YiG5p6QXG4gICAgICog55Sx5LqO5pivIOWNh+W6jyDmlbDnu4Qg5LiU5Y+q5pyJ5LiA5qyh5peL6L2sXG4gICAgICog6YCJ5oupIOS7u+aEj+S4gOS4queCuSDlsLHog73lpJ/liKTmlq3mmK/kuI3mmK8g5YiG5oiQ5bem5L6n6YOo5YiGIOWSjCDlj7Pkvqfpg6jliIZcbiAgICAgKiDlt6blj7Ppg6jliIblv4Xlrproh7PlsJHmnInkuIDkuKrkvp3nhLbmmK/ljYfluo/nmoTmg4XlhrUg6L+Z5bCx6IO95Yik5patIOaVsOaNruaYr+S4jeaYr+e7neWvueeahOiQveWcqOafkOS4gOS+p1xuICAgICAqICovXG4gICAgaWYgKG51bXMubGVuZ3RoID09PSAwKSByZXR1cm4gLTE7XG4gICAgaWYgKG51bXMubGVuZ3RoID09PSAxKSByZXR1cm4gbnVtc1swXSA9PT0gdGFyZ2V0ID8gMCA6IC0xO1xuICAgIGxldCBsZWZ0ID0gMDtcbiAgICBsZXQgcmlnaHQgPSBudW1zLmxlbmd0aCAtIDE7XG4gICAgd2hpbGUgKGxlZnQgPD0gcmlnaHQpIHtcbiAgICAgICAgY29uc3QgbWlkZGxlID0gbGVmdCArICgocmlnaHQgLSBsZWZ0KSA+Pj4gMSk7XG5cbiAgICAgICAgaWYgKG51bXNbbWlkZGxlXSA9PT0gdGFyZ2V0KSByZXR1cm4gbWlkZGxlO1xuICAgICAgICAvLyDnlLHkuo7kuIrpnaIg5LqM5YiGIOaYr+WQkeS4i+WPluaVtCDmiYDmnInlj6rlj6/og73lh7rnjrBcbiAgICAgICAgLy8g5p6B56uv5oOF5Ya15LiLIOWPquacieS4gOS4quWAvCjlhbHkuIDkuKrlgLwpIOaIluiAhSDlj6rmnInlj7PkvqfmnInlgLzlt6bkvqfmsqHmnInlgLwo5YWxMuS4quWAvClcbiAgICAgICAgLy8g5Yik5pat5Y+z5L6nIOaYr+WQpuS/neaMgeWNh+W6j1xuICAgICAgICBsZXQgc3VyZU5vdEluUmlnaHQgPSBmYWxzZTtcbiAgICAgICAgaWYgKG51bXNbbWlkZGxlICsgMV0gPD0gbnVtc1tyaWdodF0pIHtcbiAgICAgICAgICAgIC8vIOWmguaenOS/neaMgeWNh+W6jyDlsLHliKTmlq0gdGFyZ2V0IOaYr+S4jeaYr+iQveWcqOWMuumXtOWGhVxuICAgICAgICAgICAgaWYgKG51bXNbbWlkZGxlICsgMV0gPD0gdGFyZ2V0ICYmIHRhcmdldCA8PSBudW1zW3JpZ2h0XSkge1xuICAgICAgICAgICAgICAgIGxlZnQgPSBtaWRkbGUgKyAxO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByaWdodCA9IG1pZGRsZSAtIDE7XG4gICAgICAgICAgICAgICAgc3VyZU5vdEluUmlnaHQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8g5Yik5pat5bem5L6nIOaYr+WQpuS/neaMgeWNh+W6j1xuICAgICAgICBsZXQgc3VyZU5vdEluTGVmdCA9IGZhbHNlO1xuICAgICAgICBpZiAobWlkZGxlIC0gMSA+PSBsZWZ0ICYmIG51bXNbbGVmdF0gPD0gbnVtc1ttaWRkbGUgLSAxXSkge1xuICAgICAgICAgICAgaWYgKG51bXNbbGVmdF0gPD0gdGFyZ2V0ICYmIHRhcmdldCA8PSBudW1zW21pZGRsZSAtIDFdKSB7XG4gICAgICAgICAgICAgICAgcmlnaHQgPSBtaWRkbGUgLSAxO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBsZWZ0ID0gbWlkZGxlICsgMTtcbiAgICAgICAgICAgICAgICBzdXJlTm90SW5MZWZ0ID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzdXJlTm90SW5MZWZ0ICYmIHN1cmVOb3RJblJpZ2h0KSByZXR1cm4gLTE7XG4gICAgfVxuXG4gICAgcmV0dXJuIC0xO1xufTtcblxuaW1wb3J0IGFzc2VydCBmcm9tIFwiYXNzZXJ0XCI7XG5cbmFzc2VydC5zdHJpY3RFcXVhbChcbiAgICBzZWFyY2goWzQsIDUsIDYsIDcsIDAsIDEsIDJdLCAwKSxcbiAgICA0LFxuKTtcbmFzc2VydC5zdHJpY3RFcXVhbChcbiAgICBzZWFyY2goWzQsIDUsIDYsIDcsIDAsIDEsIDIsIDMsIDRdLCAwKSxcbiAgICA0LFxuKTtcbmFzc2VydC5zdHJpY3RFcXVhbChcbiAgICBzZWFyY2goWzQsIDUsIDYsIDcsIDAsIDEsIDJdLCAzKSxcbiAgICAtMSxcbik7XG5hc3NlcnQuc3RyaWN0RXF1YWwoXG4gICAgc2VhcmNoKFsxLCAzXSwgMCksXG4gICAgLTEsXG4pO1xuYXNzZXJ0LnN0cmljdEVxdWFsKFxuICAgIHNlYXJjaChbMV0sIDApLFxuICAgIC0xLFxuKTtcbiJdfQ==
