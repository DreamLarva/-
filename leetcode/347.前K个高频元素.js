"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/*
给定一个非空的整数数组，返回其中出现频率前 k 高的元素。

示例 1:

输入: nums = [1,1,1,2,2,3], k = 2
输出: [1,2]
示例 2:

输入: nums = [1], k = 1
输出: [1]
说明：

你可以假设给定的 k 总是合理的，且 1 ≤ k ≤ 数组中不相同的元素的个数。
你的算法的时间复杂度必须优于 O(n log n) , n 是数组的大小。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/top-k-frequent-elements
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
* */
const lodash_1 = __importDefault(require("lodash"));
/**
 * @param {number[]} nums
 * @param {number} k
 * @return {number[]}
 */
var topKFrequent = function (nums, k) {
    // 类似 215.数组中的第K个最大元素
    // 不过 这边求 前 k 个 所以 不能用 快速选择法
    const countMap = lodash_1.default.toPairs(lodash_1.default.countBy(nums));
    const minHeap = [];
    for (let i = 0; i < countMap.length; i++) {
        if (minHeap.length === k && countMap[i][1] < minHeap[0][1])
            continue;
        minHeap.push(countMap[i]);
        heapifyWithSiftDown(minHeap, (a, b) => a[1] > b[1]);
        if (minHeap.length > k) {
            minHeap.shift();
        }
    }
    return minHeap.map(v => Number(v[0]));
};
function heapifyWithSiftDown(A, fn) {
    // 初始选择最接近叶子的一个父结点
    for (let i = Math.floor((A.length - 1) / 2); i >= 0; i--) {
        siftDown(A, i, fn);
    }
    return A;
}
function siftDown(A, k, fn = (a, b) => a > b) {
    // 此处是 最小堆
    while (k * 2 + 1 < A.length) {
        let son = k * 2 + 1;
        // 与其两个儿子中较小的一个比较
        if (k * 2 + 2 < A.length && fn(A[son], A[k * 2 + 2])) {
            son = k * 2 + 2;
        }
        // 若大于儿子，则与儿子交换。
        if (fn(A[son], A[k])) {
            break;
        }
        [A[son], A[k]] = [A[k], A[son]];
        // 交换后再与新的儿子比较并交换，直至没有儿子。
        k = son;
    }
}
const assert_1 = __importDefault(require("assert"));
assert_1.default.deepStrictEqual(topKFrequent([1, 1, 1, 2, 2, 3], 2).sort(), [1, 2].sort());
assert_1.default.deepStrictEqual(topKFrequent([1], 1).sort(), [1].sort());
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQ3LuWJjUvkuKrpq5jpopHlhYPntKAuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbImxlZXRjb2RlLzM0Ny7liY1L5Liq6auY6aKR5YWD57SgLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFtQkk7QUFDSixvREFBdUI7QUFFdkI7Ozs7R0FJRztBQUNILElBQUksWUFBWSxHQUFHLFVBQVUsSUFBYyxFQUFFLENBQVM7SUFDbEQscUJBQXFCO0lBQ3JCLDRCQUE0QjtJQUM1QixNQUFNLFFBQVEsR0FBRyxnQkFBQyxDQUFDLE9BQU8sQ0FBQyxnQkFBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQzVDLE1BQU0sT0FBTyxHQUF1QixFQUFFLENBQUM7SUFDdkMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDdEMsSUFBSSxPQUFPLENBQUMsTUFBTSxLQUFLLENBQUMsSUFBSSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUFFLFNBQVM7UUFDckUsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMxQixtQkFBbUIsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDcEQsSUFBSSxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNwQixPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDbkI7S0FDSjtJQUVELE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzFDLENBQUMsQ0FBQztBQUVGLFNBQVMsbUJBQW1CLENBQUksQ0FBTSxFQUFFLEVBQTJCO0lBQy9ELGtCQUFrQjtJQUNsQixLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDdEQsUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7S0FDdEI7SUFDRCxPQUFPLENBQUMsQ0FBQztBQUNiLENBQUM7QUFFRCxTQUFTLFFBQVEsQ0FDYixDQUFNLEVBQ04sQ0FBUyxFQUNULEtBQThCLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUM7SUFFN0MsVUFBVTtJQUNWLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sRUFBRTtRQUN6QixJQUFJLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNwQixpQkFBaUI7UUFDakIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUNsRCxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDbkI7UUFDRCxnQkFBZ0I7UUFDaEIsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ2xCLE1BQU07U0FDVDtRQUNELENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ2hDLHlCQUF5QjtRQUN6QixDQUFDLEdBQUcsR0FBRyxDQUFDO0tBQ1g7QUFDTCxDQUFDO0FBR0Qsb0RBQTRCO0FBRTVCLGdCQUFNLENBQUMsZUFBZSxDQUNsQixZQUFZLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUMxQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FDaEIsQ0FBQztBQUNGLGdCQUFNLENBQUMsZUFBZSxDQUNsQixZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFDM0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcclxu57uZ5a6a5LiA5Liq6Z2e56m655qE5pW05pWw5pWw57uE77yM6L+U5Zue5YW25Lit5Ye6546w6aKR546H5YmNwqBrwqDpq5jnmoTlhYPntKDjgIJcclxuXHJcbuekuuS+iyAxOlxyXG5cclxu6L6T5YWlOiBudW1zID0gWzEsMSwxLDIsMiwzXSwgayA9IDJcclxu6L6T5Ye6OiBbMSwyXVxyXG7npLrkvosgMjpcclxuXHJcbui+k+WFpTogbnVtcyA9IFsxXSwgayA9IDFcclxu6L6T5Ye6OiBbMV1cclxu6K+05piO77yaXHJcblxyXG7kvaDlj6/ku6XlgYforr7nu5nlrprnmoTCoGvCoOaAu+aYr+WQiOeQhueahO+8jOS4lCAxIOKJpCBrIOKJpCDmlbDnu4TkuK3kuI3nm7jlkIznmoTlhYPntKDnmoTkuKrmlbDjgIJcclxu5L2g55qE566X5rOV55qE5pe26Ze05aSN5p2C5bqm5b+F6aG75LyY5LqOIE8obiBsb2cgbikgLMKgbsKg5piv5pWw57uE55qE5aSn5bCP44CCXHJcblxyXG7mnaXmupDvvJrlipvmiaPvvIhMZWV0Q29kZe+8iVxyXG7pk77mjqXvvJpodHRwczovL2xlZXRjb2RlLWNuLmNvbS9wcm9ibGVtcy90b3Atay1mcmVxdWVudC1lbGVtZW50c1xyXG7okZfkvZzmnYPlvZLpoobmiaPnvZHnu5zmiYDmnInjgILllYbkuJrovazovb3or7fogZTns7vlrpjmlrnmjojmnYPvvIzpnZ7llYbkuJrovazovb3or7fms6jmmI7lh7rlpITjgIJcclxuKiAqL1xyXG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7bnVtYmVyW119IG51bXNcclxuICogQHBhcmFtIHtudW1iZXJ9IGtcclxuICogQHJldHVybiB7bnVtYmVyW119XHJcbiAqL1xyXG52YXIgdG9wS0ZyZXF1ZW50ID0gZnVuY3Rpb24gKG51bXM6IG51bWJlcltdLCBrOiBudW1iZXIpIHtcclxuICAgIC8vIOexu+S8vCAyMTUu5pWw57uE5Lit55qE56ysS+S4quacgOWkp+WFg+e0oFxyXG4gICAgLy8g5LiN6L+HIOi/mei+ueaxgiDliY0gayDkuKog5omA5LulIOS4jeiDveeUqCDlv6vpgJ/pgInmi6nms5VcclxuICAgIGNvbnN0IGNvdW50TWFwID0gXy50b1BhaXJzKF8uY291bnRCeShudW1zKSk7XHJcbiAgICBjb25zdCBtaW5IZWFwOiBbc3RyaW5nLCBudW1iZXJdW10gPSBbXTtcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY291bnRNYXAubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBpZiAobWluSGVhcC5sZW5ndGggPT09IGsgJiYgY291bnRNYXBbaV1bMV0gPCBtaW5IZWFwWzBdWzFdKSBjb250aW51ZTtcclxuICAgICAgICBtaW5IZWFwLnB1c2goY291bnRNYXBbaV0pO1xyXG4gICAgICAgIGhlYXBpZnlXaXRoU2lmdERvd24obWluSGVhcCwgKGEsIGIpID0+IGFbMV0gPiBiWzFdKTtcclxuICAgICAgICBpZiAobWluSGVhcC5sZW5ndGggPiBrKSB7XHJcbiAgICAgICAgICAgIG1pbkhlYXAuc2hpZnQoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG1pbkhlYXAubWFwKHYgPT4gTnVtYmVyKHZbMF0pKTtcclxufTtcclxuXHJcbmZ1bmN0aW9uIGhlYXBpZnlXaXRoU2lmdERvd248VD4oQTogVFtdLCBmbjogKGE6IFQsIGI6IFQpID0+IGJvb2xlYW4pIHtcclxuICAgIC8vIOWIneWni+mAieaLqeacgOaOpei/keWPtuWtkOeahOS4gOS4queItue7k+eCuVxyXG4gICAgZm9yIChsZXQgaSA9IE1hdGguZmxvb3IoKEEubGVuZ3RoIC0gMSkgLyAyKTsgaSA+PSAwOyBpLS0pIHtcclxuICAgICAgICBzaWZ0RG93bihBLCBpLCBmbik7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gQTtcclxufVxyXG5cclxuZnVuY3Rpb24gc2lmdERvd248VCA9IG51bWJlcj4oXHJcbiAgICBBOiBUW10sXHJcbiAgICBrOiBudW1iZXIsXHJcbiAgICBmbjogKGE6IFQsIGI6IFQpID0+IGJvb2xlYW4gPSAoYSwgYikgPT4gYSA+IGIsXHJcbikge1xyXG4gICAgLy8g5q2k5aSE5pivIOacgOWwj+WghlxyXG4gICAgd2hpbGUgKGsgKiAyICsgMSA8IEEubGVuZ3RoKSB7XHJcbiAgICAgICAgbGV0IHNvbiA9IGsgKiAyICsgMTtcclxuICAgICAgICAvLyDkuI7lhbbkuKTkuKrlhL/lrZDkuK3ovoPlsI/nmoTkuIDkuKrmr5TovoNcclxuICAgICAgICBpZiAoayAqIDIgKyAyIDwgQS5sZW5ndGggJiYgZm4oQVtzb25dLCBBW2sgKiAyICsgMl0pKSB7XHJcbiAgICAgICAgICAgIHNvbiA9IGsgKiAyICsgMjtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g6Iul5aSn5LqO5YS/5a2Q77yM5YiZ5LiO5YS/5a2Q5Lqk5o2i44CCXHJcbiAgICAgICAgaWYgKGZuKEFbc29uXSwgQVtrXSkpIHtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFtBW3Nvbl0sIEFba11dID0gW0Fba10sIEFbc29uXV07XHJcbiAgICAgICAgLy8g5Lqk5o2i5ZCO5YaN5LiO5paw55qE5YS/5a2Q5q+U6L6D5bm25Lqk5o2i77yM55u06Iez5rKh5pyJ5YS/5a2Q44CCXHJcbiAgICAgICAgayA9IHNvbjtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbmltcG9ydCBhc3NlcnQgZnJvbSAnYXNzZXJ0JztcclxuXHJcbmFzc2VydC5kZWVwU3RyaWN0RXF1YWwoXHJcbiAgICB0b3BLRnJlcXVlbnQoWzEsIDEsIDEsIDIsIDIsIDNdLCAyKS5zb3J0KCksXHJcbiAgICBbMSwgMl0uc29ydCgpLFxyXG4pO1xyXG5hc3NlcnQuZGVlcFN0cmljdEVxdWFsKFxyXG4gICAgdG9wS0ZyZXF1ZW50KFsxXSwgMSkuc29ydCgpLFxyXG4gICAgWzFdLnNvcnQoKSxcclxuKTtcclxuIl19