"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/*
给定一个非空的整数数组，返回其中出现频率前 k 高的元素。

示例 1:

输入: nums = [1,1,1,2,2,3], k = 2
输出: [1,2]
示例 2:

输入: nums = [1], k = 1
输出: [1]
说明：

你可以假设给定的 k 总是合理的，且 1 ≤ k ≤ 数组中不相同的元素的个数。
你的算法的时间复杂度必须优于 O(n log n) , n 是数组的大小。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/top-k-frequent-elements
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
* */
const lodash_1 = __importDefault(require("lodash"));
/**
 * @param {number[]} nums
 * @param {number} k
 * @return {number[]}
 */
var topKFrequent = function (nums, k) {
    // 类似 215.数组中的第K个最大元素
    // 不过 这边求 前 k 个 所以 不能用 快速选择法
    const countMap = _.toPairs(_.countBy(nums));
    const minHeap = [];
    for (let i = 0; i < countMap.length; i++) {
        minHeap.push(countMap[i]);
        heapifyWithSiftDown(minHeap, (a, b) => a[1] > b[1]);
        if (minHeap.length > k) {
            minHeap.shift();
        }
    }
    return minHeap.map(v => Number(v[0]));
};
function heapifyWithSiftDown(A, fn) {
    // 初始选择最接近叶子的一个父结点
    for (let i = Math.floor((A.length - 1) / 2); i >= 0; i--) {
        siftDown(A, i, fn);
    }
    return A;
}
function siftDown(A, k, fn = (a, b) => a > b) {
    // 此处是 最小堆
    while (k * 2 + 1 < A.length) {
        let son = k * 2 + 1;
        // 与其两个儿子中较小的一个比较
        if (k * 2 + 2 < A.length && fn(A[son], A[k * 2 + 2])) {
            son = k * 2 + 2;
        }
        // 若大于儿子，则与儿子交换。
        if (fn(A[son], A[k])) {
            break;
        }
        [A[son], A[k]] = [A[k], A[son]];
        // 交换后再与新的儿子比较并交换，直至没有儿子。
        k = son;
    }
}
const assert_1 = __importDefault(require("assert"));
assert_1.default.deepStrictEqual(topKFrequent([1, 1, 1, 2, 2, 3], 2).sort(), [1, 2].sort());
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQ3LuWJjUvkuKrpq5jpopHlhYPntKAuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbImxlZXRjb2RlLzM0Ny7liY1L5Liq6auY6aKR5YWD57SgLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFtQkk7QUFDSixvREFBdUI7QUFFdkI7Ozs7R0FJRztBQUNILElBQUksWUFBWSxHQUFHLFVBQVUsSUFBYyxFQUFFLENBQVM7SUFDbEQscUJBQXFCO0lBQ3JCLDRCQUE0QjtJQUM1QixNQUFNLFFBQVEsR0FBRyxnQkFBQyxDQUFDLE9BQU8sQ0FBQyxnQkFBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQzVDLE1BQU0sT0FBTyxHQUF1QixFQUFFLENBQUM7SUFDdkMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDdEMsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMxQixtQkFBbUIsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDcEQsSUFBSSxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNwQixPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDbkI7S0FDSjtJQUVELE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBRSxDQUFDLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUMsQ0FBQztBQUVGLFNBQVMsbUJBQW1CLENBQUksQ0FBTSxFQUFFLEVBQTJCO0lBQy9ELGtCQUFrQjtJQUNsQixLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDdEQsUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7S0FDdEI7SUFDRCxPQUFPLENBQUMsQ0FBQztBQUNiLENBQUM7QUFFRCxTQUFTLFFBQVEsQ0FDYixDQUFNLEVBQ04sQ0FBUyxFQUNULEtBQThCLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUM7SUFFN0MsVUFBVTtJQUNWLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sRUFBRTtRQUN6QixJQUFJLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNwQixpQkFBaUI7UUFDakIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUNsRCxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDbkI7UUFFRCxnQkFBZ0I7UUFDaEIsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ2xCLE1BQU07U0FDVDtRQUNELENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ2hDLHlCQUF5QjtRQUN6QixDQUFDLEdBQUcsR0FBRyxDQUFDO0tBQ1g7QUFDTCxDQUFDO0FBR0Qsb0RBQTRCO0FBRTVCLGdCQUFNLENBQUMsZUFBZSxDQUNsQixZQUFZLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUMxQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FDaEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbue7meWumuS4gOS4qumdnuepuueahOaVtOaVsOaVsOe7hO+8jOi/lOWbnuWFtuS4reWHuueOsOmikeeOh+WJjcKga8Kg6auY55qE5YWD57Sg44CCXHJcblxyXG7npLrkvosgMTpcclxuXHJcbui+k+WFpTogbnVtcyA9IFsxLDEsMSwyLDIsM10sIGsgPSAyXHJcbui+k+WHujogWzEsMl1cclxu56S65L6LIDI6XHJcblxyXG7ovpPlhaU6IG51bXMgPSBbMV0sIGsgPSAxXHJcbui+k+WHujogWzFdXHJcbuivtOaYju+8mlxyXG5cclxu5L2g5Y+v5Lul5YGH6K6+57uZ5a6a55qEwqBrwqDmgLvmmK/lkIjnkIbnmoTvvIzkuJQgMSDiiaQgayDiiaQg5pWw57uE5Lit5LiN55u45ZCM55qE5YWD57Sg55qE5Liq5pWw44CCXHJcbuS9oOeahOeul+azleeahOaXtumXtOWkjeadguW6puW/hemhu+S8mOS6jiBPKG4gbG9nIG4pICzCoG7CoOaYr+aVsOe7hOeahOWkp+Wwj+OAglxyXG5cclxu5p2l5rqQ77ya5Yqb5omj77yITGVldENvZGXvvIlcclxu6ZO+5o6l77yaaHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvdG9wLWstZnJlcXVlbnQtZWxlbWVudHNcclxu6JGX5L2c5p2D5b2S6aKG5omj572R57uc5omA5pyJ44CC5ZWG5Lia6L2s6L296K+36IGU57O75a6Y5pa55o6I5p2D77yM6Z2e5ZWG5Lia6L2s6L296K+35rOo5piO5Ye65aSE44CCXHJcbiogKi9cclxuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcclxuXHJcbi8qKlxyXG4gKiBAcGFyYW0ge251bWJlcltdfSBudW1zXHJcbiAqIEBwYXJhbSB7bnVtYmVyfSBrXHJcbiAqIEByZXR1cm4ge251bWJlcltdfVxyXG4gKi9cclxudmFyIHRvcEtGcmVxdWVudCA9IGZ1bmN0aW9uIChudW1zOiBudW1iZXJbXSwgazogbnVtYmVyKSB7XHJcbiAgICAvLyDnsbvkvLwgMjE1LuaVsOe7hOS4reeahOesrEvkuKrmnIDlpKflhYPntKBcclxuICAgIC8vIOS4jei/hyDov5novrnmsYIg5YmNIGsg5LiqIOaJgOS7pSDkuI3og73nlKgg5b+r6YCf6YCJ5oup5rOVXHJcbiAgICBjb25zdCBjb3VudE1hcCA9IF8udG9QYWlycyhfLmNvdW50QnkobnVtcykpO1xyXG4gICAgY29uc3QgbWluSGVhcDogW3N0cmluZywgbnVtYmVyXVtdID0gW107XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvdW50TWFwLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgbWluSGVhcC5wdXNoKGNvdW50TWFwW2ldKTtcclxuICAgICAgICBoZWFwaWZ5V2l0aFNpZnREb3duKG1pbkhlYXAsIChhLCBiKSA9PiBhWzFdID4gYlsxXSk7XHJcbiAgICAgICAgaWYgKG1pbkhlYXAubGVuZ3RoID4gaykge1xyXG4gICAgICAgICAgICBtaW5IZWFwLnNoaWZ0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBtaW5IZWFwLm1hcCggdiA9PiBOdW1iZXIodlswXSkpO1xyXG59O1xyXG5cclxuZnVuY3Rpb24gaGVhcGlmeVdpdGhTaWZ0RG93bjxUPihBOiBUW10sIGZuOiAoYTogVCwgYjogVCkgPT4gYm9vbGVhbikge1xyXG4gICAgLy8g5Yid5aeL6YCJ5oup5pyA5o6l6L+R5Y+25a2Q55qE5LiA5Liq54i257uT54K5XHJcbiAgICBmb3IgKGxldCBpID0gTWF0aC5mbG9vcigoQS5sZW5ndGggLSAxKSAvIDIpOyBpID49IDA7IGktLSkge1xyXG4gICAgICAgIHNpZnREb3duKEEsIGksIGZuKTtcclxuICAgIH1cclxuICAgIHJldHVybiBBO1xyXG59XHJcblxyXG5mdW5jdGlvbiBzaWZ0RG93bjxUID0gbnVtYmVyPihcclxuICAgIEE6IFRbXSxcclxuICAgIGs6IG51bWJlcixcclxuICAgIGZuOiAoYTogVCwgYjogVCkgPT4gYm9vbGVhbiA9IChhLCBiKSA9PiBhID4gYixcclxuKSB7XHJcbiAgICAvLyDmraTlpITmmK8g5pyA5bCP5aCGXHJcbiAgICB3aGlsZSAoayAqIDIgKyAxIDwgQS5sZW5ndGgpIHtcclxuICAgICAgICBsZXQgc29uID0gayAqIDIgKyAxO1xyXG4gICAgICAgIC8vIOS4juWFtuS4pOS4quWEv+WtkOS4rei+g+Wwj+eahOS4gOS4quavlOi+g1xyXG4gICAgICAgIGlmIChrICogMiArIDIgPCBBLmxlbmd0aCAmJiBmbihBW3Nvbl0sIEFbayAqIDIgKyAyXSkpIHtcclxuICAgICAgICAgICAgc29uID0gayAqIDIgKyAyO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8g6Iul5aSn5LqO5YS/5a2Q77yM5YiZ5LiO5YS/5a2Q5Lqk5o2i44CCXHJcbiAgICAgICAgaWYgKGZuKEFbc29uXSwgQVtrXSkpIHtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFtBW3Nvbl0sIEFba11dID0gW0Fba10sIEFbc29uXV07XHJcbiAgICAgICAgLy8g5Lqk5o2i5ZCO5YaN5LiO5paw55qE5YS/5a2Q5q+U6L6D5bm25Lqk5o2i77yM55u06Iez5rKh5pyJ5YS/5a2Q44CCXHJcbiAgICAgICAgayA9IHNvbjtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbmltcG9ydCBhc3NlcnQgZnJvbSAnYXNzZXJ0JztcclxuXHJcbmFzc2VydC5kZWVwU3RyaWN0RXF1YWwoXHJcbiAgICB0b3BLRnJlcXVlbnQoWzEsIDEsIDEsIDIsIDIsIDNdLCAyKS5zb3J0KCksXHJcbiAgICBbMSwgMl0uc29ydCgpLFxyXG4pO1xyXG4iXX0=
