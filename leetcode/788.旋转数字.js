"use strict";
/*
我们称一个数 X 为好数, 如果它的每位数字逐个地被旋转 180 度后，我们仍可以得到一个有效的，且和 X 不同的数。要求每位数字都要被旋转。

如果一个数的每位数字被旋转以后仍然还是一个数字， 则这个数是有效的。0, 1, 和 8 被旋转后仍然是它们自己；2 和 5 可以互相旋转成对方；6 和 9 同理，除了这些以外其他的数字旋转以后都不再是有效的数字。

现在我们有一个正整数 N, 计算从 1 到 N 中有多少个数 X 是好数？

示例:
输入: 10
输出: 4
解释:
在[1, 10]中有四个好数： 2, 5, 6, 9。
注意 1 和 10 不是好数, 因为他们在旋转之后不变。
注意:

N 的取值范围是 [1, 10000]。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/rotated-digits
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
* */
var __importDefault =
  (this && this.__importDefault) ||
  function (mod) {
    return mod && mod.__esModule ? mod : { default: mod };
  };
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @param {number} N
 * @return {number}
 */
var rotatedDigits1 = function (N) {
  let num = 0;
  for (let i = 1; i <= N; i++) {
    isGoodNumber(i) && num++;
  }
  return num;
};
/**
 * 规则 数字 只能是0 1 8 2 5 6 9
 * 且不能只有 1 0 组成
 * */
function isGoodNumber(num) {
  let isValid = false;
  while (num !== 0) {
    const remainder = num % 10;
    if ([2, 5, 6, 9].includes(remainder)) {
      isValid = true;
      num = Math.floor(num / 10);
      continue;
    }
    if ([1, 0, 8].includes(remainder)) {
      num = Math.floor(num / 10);
      continue;
    }
    return false;
  }
  return isValid;
}
var rotatedDigits2 = function (N) {
  let num = 0;
  for (let i = 1; i <= N; i++) {
    isGoodNumber2(i) && num++;
  }
  return num;
};
const map = [0, 0, 1, -1, -1, 1, 1, -1, 0, 1, 0];
function isGoodNumber2(num) {
  let isValid = 0;
  while (num !== 0) {
    const remainder = num % 10;
    if (map[remainder] === -1) {
      return false;
    }
    isValid += map[remainder];
    num = Math.floor(num / 10);
  }
  return isValid > 0;
}
const assert_1 = __importDefault(require("assert"));
assert_1.default.strictEqual(rotatedDigits1(10), 4);
assert_1.default.strictEqual(rotatedDigits2(10), 4);
const Benchmark = require("benchmark");
const suite = new Benchmark.Suite();
suite
  .add("===", function () {
    rotatedDigits1(10);
  })
  .add("map", function () {
    rotatedDigits2(10);
  })
  // add listeners
  .on("cycle", function (event) {
    console.log(String(event.target));
  })
  .on("complete", function () {
    console.log("Fastest is " + this.filter("fastest").map("name"));
  })
  // run async
  .run({ async: false });
/**
 * === x 4,365,630 ops/sec 卤6.26% (85 runs sampled)
 * map x 17,558,885 ops/sec 卤2.90% (86 runs sampled)
 * Fastest is map
 * 这种 需要多个 可选值进行比较的 使用map 速度 快的多
 * */
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzg4LuaXi+i9rOaVsOWtly5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsibGVldGNvZGUvNzg4LuaXi+i9rOaVsOWtly50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBb0JJOzs7OztBQUVKOzs7R0FHRztBQUNILElBQUksY0FBYyxHQUFHLFVBQVUsQ0FBUztJQUN0QyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUM7SUFDWixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQzNCLFlBQVksQ0FBQyxDQUFDLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztLQUMxQjtJQUNELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQyxDQUFDO0FBRUY7OztLQUdLO0FBQ0wsU0FBUyxZQUFZLENBQUMsR0FBVztJQUMvQixJQUFJLE9BQU8sR0FBRyxLQUFLLENBQUM7SUFDcEIsT0FBTyxHQUFHLEtBQUssQ0FBQyxFQUFFO1FBQ2hCLE1BQU0sU0FBUyxHQUFHLEdBQUcsR0FBRyxFQUFFLENBQUM7UUFDM0IsSUFBSSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsRUFBRTtZQUNwQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1lBQ2YsR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQyxDQUFDO1lBQzNCLFNBQVM7U0FDVjtRQUNELElBQUksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsRUFBRTtZQUNqQyxHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLENBQUM7WUFDM0IsU0FBUztTQUNWO1FBQ0QsT0FBTyxLQUFLLENBQUM7S0FDZDtJQUNELE9BQU8sT0FBTyxDQUFDO0FBQ2pCLENBQUM7QUFFRCxJQUFJLGNBQWMsR0FBRyxVQUFVLENBQVM7SUFDdEMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDO0lBQ1osS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUMzQixhQUFhLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxFQUFFLENBQUM7S0FDM0I7SUFDRCxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUMsQ0FBQztBQUNGLE1BQU0sR0FBRyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBRWpELFNBQVMsYUFBYSxDQUFDLEdBQVc7SUFDaEMsSUFBSSxPQUFPLEdBQUcsQ0FBQyxDQUFDO0lBQ2hCLE9BQU8sR0FBRyxLQUFLLENBQUMsRUFBRTtRQUNoQixNQUFNLFNBQVMsR0FBRyxHQUFHLEdBQUcsRUFBRSxDQUFDO1FBQzNCLElBQUksR0FBRyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFO1lBQ3pCLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7UUFDRCxPQUFPLElBQUksR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzFCLEdBQUcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsQ0FBQztLQUM1QjtJQUVELE9BQU8sT0FBTyxHQUFHLENBQUMsQ0FBQztBQUNyQixDQUFDO0FBRUQsb0RBQTRCO0FBRTVCLGdCQUFNLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUMxQyxnQkFBTSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFFMUMsTUFBTSxTQUFTLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ3ZDLE1BQU0sS0FBSyxHQUFHLElBQUksU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDO0FBQ3BDLEtBQUs7S0FDRixHQUFHLENBQUMsS0FBSyxFQUFFO0lBQ1YsY0FBYyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ3JCLENBQUMsQ0FBQztLQUNELEdBQUcsQ0FBQyxLQUFLLEVBQUU7SUFDVixjQUFjLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDckIsQ0FBQyxDQUFDO0lBQ0YsZ0JBQWdCO0tBQ2YsRUFBRSxDQUFDLE9BQU8sRUFBRSxVQUFVLEtBQVU7SUFDL0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7QUFDcEMsQ0FBQyxDQUFDO0tBQ0QsRUFBRSxDQUFDLFVBQVUsRUFBRTtJQUNkLE9BQU8sQ0FBQyxHQUFHLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7QUFDbEUsQ0FBQyxDQUFDO0lBQ0YsWUFBWTtLQUNYLEdBQUcsQ0FBQyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO0FBRXpCOzs7OztLQUtLIiwic291cmNlc0NvbnRlbnQiOlsiLypcbuaIkeS7rOensOS4gOS4quaVsCBYIOS4uuWlveaVsCwg5aaC5p6c5a6D55qE5q+P5L2N5pWw5a2X6YCQ5Liq5Zyw6KKr5peL6L2sIDE4MCDluqblkI7vvIzmiJHku6zku43lj6/ku6XlvpfliLDkuIDkuKrmnInmlYjnmoTvvIzkuJTlkowgWCDkuI3lkIznmoTmlbDjgILopoHmsYLmr4/kvY3mlbDlrZfpg73opoHooqvml4vovazjgIJcblxu5aaC5p6c5LiA5Liq5pWw55qE5q+P5L2N5pWw5a2X6KKr5peL6L2s5Lul5ZCO5LuN54S26L+Y5piv5LiA5Liq5pWw5a2X77yMIOWImei/meS4quaVsOaYr+acieaViOeahOOAgjAsIDEsIOWSjCA4IOiiq+aXi+i9rOWQjuS7jeeEtuaYr+Wug+S7rOiHquW3se+8mzIg5ZKMIDUg5Y+v5Lul5LqS55u45peL6L2s5oiQ5a+55pa577ybNiDlkowgOSDlkIznkIbvvIzpmaTkuobov5nkupvku6XlpJblhbbku5bnmoTmlbDlrZfml4vovazku6XlkI7pg73kuI3lho3mmK/mnInmlYjnmoTmlbDlrZfjgIJcblxu546w5Zyo5oiR5Lus5pyJ5LiA5Liq5q2j5pW05pWwIE4sIOiuoeeul+S7jiAxIOWIsCBOIOS4reacieWkmuWwkeS4quaVsCBYIOaYr+WlveaVsO+8n1xuXG7npLrkvos6XG7ovpPlhaU6IDEwXG7ovpPlh7o6IDRcbuino+mHijpcbuWcqFsxLCAxMF3kuK3mnInlm5vkuKrlpb3mlbDvvJogMiwgNSwgNiwgOeOAglxu5rOo5oSPIDEg5ZKMIDEwIOS4jeaYr+WlveaVsCwg5Zug5Li65LuW5Lus5Zyo5peL6L2s5LmL5ZCO5LiN5Y+Y44CCXG7ms6jmhI86XG5cbk4g55qE5Y+W5YC86IyD5Zu05pivIFsxLCAxMDAwMF3jgIJcblxu5p2l5rqQ77ya5Yqb5omj77yITGVldENvZGXvvIlcbumTvuaOpe+8mmh0dHBzOi8vbGVldGNvZGUtY24uY29tL3Byb2JsZW1zL3JvdGF0ZWQtZGlnaXRzXG7okZfkvZzmnYPlvZLpoobmiaPnvZHnu5zmiYDmnInjgILllYbkuJrovazovb3or7fogZTns7vlrpjmlrnmjojmnYPvvIzpnZ7llYbkuJrovazovb3or7fms6jmmI7lh7rlpITjgIJcbiogKi9cblxuLyoqXG4gKiBAcGFyYW0ge251bWJlcn0gTlxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG52YXIgcm90YXRlZERpZ2l0czEgPSBmdW5jdGlvbiAoTjogbnVtYmVyKSB7XG4gIGxldCBudW0gPSAwO1xuICBmb3IgKGxldCBpID0gMTsgaSA8PSBOOyBpKyspIHtcbiAgICBpc0dvb2ROdW1iZXIoaSkgJiYgbnVtKys7XG4gIH1cbiAgcmV0dXJuIG51bTtcbn07XG5cbi8qKlxuICog6KeE5YiZIOaVsOWtlyDlj6rog73mmK8wIDEgOCAyIDUgNiA5XG4gKiDkuJTkuI3og73lj6rmnIkgMSAwIOe7hOaIkFxuICogKi9cbmZ1bmN0aW9uIGlzR29vZE51bWJlcihudW06IG51bWJlcikge1xuICBsZXQgaXNWYWxpZCA9IGZhbHNlO1xuICB3aGlsZSAobnVtICE9PSAwKSB7XG4gICAgY29uc3QgcmVtYWluZGVyID0gbnVtICUgMTA7XG4gICAgaWYgKFsyLCA1LCA2LCA5XS5pbmNsdWRlcyhyZW1haW5kZXIpKSB7XG4gICAgICBpc1ZhbGlkID0gdHJ1ZTtcbiAgICAgIG51bSA9IE1hdGguZmxvb3IobnVtIC8gMTApO1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGlmIChbMSwgMCwgOF0uaW5jbHVkZXMocmVtYWluZGVyKSkge1xuICAgICAgbnVtID0gTWF0aC5mbG9vcihudW0gLyAxMCk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiBpc1ZhbGlkO1xufVxuXG52YXIgcm90YXRlZERpZ2l0czIgPSBmdW5jdGlvbiAoTjogbnVtYmVyKSB7XG4gIGxldCBudW0gPSAwO1xuICBmb3IgKGxldCBpID0gMTsgaSA8PSBOOyBpKyspIHtcbiAgICBpc0dvb2ROdW1iZXIyKGkpICYmIG51bSsrO1xuICB9XG4gIHJldHVybiBudW07XG59O1xuY29uc3QgbWFwID0gWzAsIDAsIDEsIC0xLCAtMSwgMSwgMSwgLTEsIDAsIDEsIDBdO1xuXG5mdW5jdGlvbiBpc0dvb2ROdW1iZXIyKG51bTogbnVtYmVyKSB7XG4gIGxldCBpc1ZhbGlkID0gMDtcbiAgd2hpbGUgKG51bSAhPT0gMCkge1xuICAgIGNvbnN0IHJlbWFpbmRlciA9IG51bSAlIDEwO1xuICAgIGlmIChtYXBbcmVtYWluZGVyXSA9PT0gLTEpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaXNWYWxpZCArPSBtYXBbcmVtYWluZGVyXTtcbiAgICBudW0gPSBNYXRoLmZsb29yKG51bSAvIDEwKTtcbiAgfVxuXG4gIHJldHVybiBpc1ZhbGlkID4gMDtcbn1cblxuaW1wb3J0IGFzc2VydCBmcm9tIFwiYXNzZXJ0XCI7XG5cbmFzc2VydC5zdHJpY3RFcXVhbChyb3RhdGVkRGlnaXRzMSgxMCksIDQpO1xuYXNzZXJ0LnN0cmljdEVxdWFsKHJvdGF0ZWREaWdpdHMyKDEwKSwgNCk7XG5cbmNvbnN0IEJlbmNobWFyayA9IHJlcXVpcmUoXCJiZW5jaG1hcmtcIik7XG5jb25zdCBzdWl0ZSA9IG5ldyBCZW5jaG1hcmsuU3VpdGUoKTtcbnN1aXRlXG4gIC5hZGQoXCI9PT1cIiwgZnVuY3Rpb24gKCkge1xuICAgIHJvdGF0ZWREaWdpdHMxKDEwKTtcbiAgfSlcbiAgLmFkZChcIm1hcFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgcm90YXRlZERpZ2l0czIoMTApO1xuICB9KVxuICAvLyBhZGQgbGlzdGVuZXJzXG4gIC5vbihcImN5Y2xlXCIsIGZ1bmN0aW9uIChldmVudDogYW55KSB7XG4gICAgY29uc29sZS5sb2coU3RyaW5nKGV2ZW50LnRhcmdldCkpO1xuICB9KVxuICAub24oXCJjb21wbGV0ZVwiLCBmdW5jdGlvbiAodGhpczogYW55KSB7XG4gICAgY29uc29sZS5sb2coXCJGYXN0ZXN0IGlzIFwiICsgdGhpcy5maWx0ZXIoXCJmYXN0ZXN0XCIpLm1hcChcIm5hbWVcIikpO1xuICB9KVxuICAvLyBydW4gYXN5bmNcbiAgLnJ1bih7IGFzeW5jOiBmYWxzZSB9KTtcblxuLyoqXG4gKiA9PT0geCA0LDM2NSw2MzAgb3BzL3NlYyDljaQ2LjI2JSAoODUgcnVucyBzYW1wbGVkKVxuICogbWFwIHggMTcsNTU4LDg4NSBvcHMvc2VjIOWNpDIuOTAlICg4NiBydW5zIHNhbXBsZWQpXG4gKiBGYXN0ZXN0IGlzIG1hcFxuICog6L+Z56eNIOmcgOimgeWkmuS4qiDlj6/pgInlgLzov5vooYzmr5TovoPnmoQg5L2/55SobWFwIOmAn+W6piDlv6vnmoTlpJpcbiAqICovXG4iXX0=
