"use strict";
/*
我们称一个数 X 为好数, 如果它的每位数字逐个地被旋转 180 度后，我们仍可以得到一个有效的，且和 X 不同的数。要求每位数字都要被旋转。

如果一个数的每位数字被旋转以后仍然还是一个数字， 则这个数是有效的。0, 1, 和 8 被旋转后仍然是它们自己；2 和 5 可以互相旋转成对方；6 和 9 同理，除了这些以外其他的数字旋转以后都不再是有效的数字。

现在我们有一个正整数 N, 计算从 1 到 N 中有多少个数 X 是好数？

示例:
输入: 10
输出: 4
解释:
在[1, 10]中有四个好数： 2, 5, 6, 9。
注意 1 和 10 不是好数, 因为他们在旋转之后不变。
注意:

N 的取值范围是 [1, 10000]。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/rotated-digits
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
* */
var __importDefault =
  (this && this.__importDefault) ||
  function (mod) {
    return mod && mod.__esModule ? mod : { default: mod };
  };
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @param {number} N
 * @return {number}
 */
var rotatedDigits1 = function (N) {
  let num = 0;
  for (let i = 1; i <= N; i++) {
    isGoodNumber(i) && num++;
  }
  return num;
};
/**
 * 规则 数字 只能是0 1 8 2 5 6 9
 * 且不能只有 1 0 组成
 * */
function isGoodNumber(num) {
  let isValid = false;
  while (num !== 0) {
    const remainder = num % 10;
    if ([2, 5, 6, 9].includes(remainder)) {
      isValid = true;
      num = Math.floor(num / 10);
      continue;
    }
    if ([1, 0, 8].includes(remainder)) {
      num = Math.floor(num / 10);
      continue;
    }
    return false;
  }
  return isValid;
}
var rotatedDigits2 = function (N) {
  let num = 0;
  for (let i = 1; i <= N; i++) {
    isGoodNumber2(i) && num++;
  }
  return num;
};
const map = [0, 0, 1, -1, -1, 1, 1, -1, 0, 1, 0];
function isGoodNumber2(num) {
  let isValid = 0;
  while (num !== 0) {
    const remainder = num % 10;
    if (map[remainder] === -1) {
      return false;
    }
    isValid += map[remainder];
    num = Math.floor(num / 10);
  }
  return isValid > 0;
}
const assert_1 = __importDefault(require("assert"));
assert_1.default.strictEqual(rotatedDigits1(10), 4);
assert_1.default.strictEqual(rotatedDigits2(10), 4);
const Benchmark = require("benchmark");
const suite = new Benchmark.Suite();
suite
  .add("===", function () {
    rotatedDigits1(10);
  })
  .add("map", function () {
    rotatedDigits2(10);
  })
  // add listeners
  .on("cycle", function (event) {
    console.log(String(event.target));
  })
  .on("complete", function () {
    console.log("Fastest is " + this.filter("fastest").map("name"));
  })
  // run async
  .run({ async: false });
/**
 * === x 4,365,630 ops/sec 卤6.26% (85 runs sampled)
 * map x 17,558,885 ops/sec 卤2.90% (86 runs sampled)
 * Fastest is map
 * 这种 需要多个 可选值进行比较的 使用map 速度 快的多
 * */
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzg4LuaXi+i9rOaVsOWtly5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsibGVldGNvZGUvNzg4LuaXi+i9rOaVsOWtly50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBb0JJOzs7OztBQUdKOzs7R0FHRztBQUNILElBQUksY0FBYyxHQUFHLFVBQVUsQ0FBUztJQUNwQyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUM7SUFDWixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ3pCLFlBQVksQ0FBQyxDQUFDLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztLQUM1QjtJQUNELE9BQU8sR0FBRyxDQUFDO0FBQ2YsQ0FBQyxDQUFDO0FBRUY7OztLQUdLO0FBQ0wsU0FBUyxZQUFZLENBQUMsR0FBVztJQUM3QixJQUFJLE9BQU8sR0FBRyxLQUFLLENBQUM7SUFDcEIsT0FBTyxHQUFHLEtBQUssQ0FBQyxFQUFFO1FBQ2QsTUFBTSxTQUFTLEdBQUcsR0FBRyxHQUFHLEVBQUUsQ0FBQztRQUMzQixJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxFQUFFO1lBQ2xDLE9BQU8sR0FBRyxJQUFJLENBQUM7WUFDZixHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLENBQUM7WUFDM0IsU0FBUztTQUNaO1FBQ0QsSUFBSSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxFQUFFO1lBQy9CLEdBQUcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsQ0FBQztZQUMzQixTQUFTO1NBQ1o7UUFDRCxPQUFPLEtBQUssQ0FBQztLQUNoQjtJQUNELE9BQU8sT0FBTyxDQUFDO0FBQ25CLENBQUM7QUFHRCxJQUFJLGNBQWMsR0FBRyxVQUFVLENBQVM7SUFDcEMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDO0lBQ1osS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN6QixhQUFhLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxFQUFFLENBQUM7S0FDN0I7SUFDRCxPQUFPLEdBQUcsQ0FBQztBQUNmLENBQUMsQ0FBQztBQUNGLE1BQU0sR0FBRyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBRWpELFNBQVMsYUFBYSxDQUFDLEdBQVc7SUFDOUIsSUFBSSxPQUFPLEdBQUcsQ0FBQyxDQUFDO0lBQ2hCLE9BQU8sR0FBRyxLQUFLLENBQUMsRUFBRTtRQUNkLE1BQU0sU0FBUyxHQUFHLEdBQUcsR0FBRyxFQUFFLENBQUM7UUFDM0IsSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7WUFDdkIsT0FBTyxLQUFLLENBQUM7U0FDaEI7UUFDRCxPQUFPLElBQUksR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzFCLEdBQUcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsQ0FBQztLQUM5QjtJQUVELE9BQU8sT0FBTyxHQUFHLENBQUMsQ0FBQztBQUN2QixDQUFDO0FBRUQsb0RBQTRCO0FBRTVCLGdCQUFNLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUMxQyxnQkFBTSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFHMUMsTUFBTSxTQUFTLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ3ZDLE1BQU0sS0FBSyxHQUFHLElBQUksU0FBUyxDQUFDLEtBQUssQ0FBQztBQUNsQyxLQUFLO0tBQ0EsR0FBRyxDQUFDLEtBQUssRUFBRTtJQUNSLGNBQWMsQ0FBQyxFQUFFLENBQUMsQ0FBQTtBQUN0QixDQUFDLENBQUM7S0FDRCxHQUFHLENBQUMsS0FBSyxFQUFFO0lBQ1IsY0FBYyxDQUFDLEVBQUUsQ0FBQyxDQUFBO0FBQ3RCLENBQUMsQ0FBQztJQUNGLGdCQUFnQjtLQUNmLEVBQUUsQ0FBQyxPQUFPLEVBQUUsVUFBVSxLQUFVO0lBQzdCLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0FBQ3RDLENBQUMsQ0FBQztLQUNELEVBQUUsQ0FBQyxVQUFVLEVBQUU7SUFDWixPQUFPLENBQUMsR0FBRyxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0FBQ3BFLENBQUMsQ0FBQztJQUNGLFlBQVk7S0FDWCxHQUFHLENBQUMsRUFBQyxPQUFPLEVBQUUsS0FBSyxFQUFDLENBQUMsQ0FBQztBQUUzQjs7Ozs7S0FLSyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG7miJHku6znp7DkuIDkuKrmlbAgWCDkuLrlpb3mlbAsIOWmguaenOWug+eahOavj+S9jeaVsOWtl+mAkOS4quWcsOiiq+aXi+i9rCAxODAg5bqm5ZCO77yM5oiR5Lus5LuN5Y+v5Lul5b6X5Yiw5LiA5Liq5pyJ5pWI55qE77yM5LiU5ZKMIFgg5LiN5ZCM55qE5pWw44CC6KaB5rGC5q+P5L2N5pWw5a2X6YO96KaB6KKr5peL6L2s44CCXG5cbuWmguaenOS4gOS4quaVsOeahOavj+S9jeaVsOWtl+iiq+aXi+i9rOS7peWQjuS7jeeEtui/mOaYr+S4gOS4quaVsOWtl++8jMKg5YiZ6L+Z5Liq5pWw5piv5pyJ5pWI55qE44CCMCwgMSwg5ZKMIDgg6KKr5peL6L2s5ZCO5LuN54S25piv5a6D5Lus6Ieq5bex77ybMiDlkowgNSDlj6/ku6XkupLnm7jml4vovazmiJDlr7nmlrnvvJs2IOWSjCA5IOWQjOeQhu+8jOmZpOS6hui/meS6m+S7peWkluWFtuS7lueahOaVsOWtl+aXi+i9rOS7peWQjumDveS4jeWGjeaYr+acieaViOeahOaVsOWtl+OAglxuXG7njrDlnKjmiJHku6zmnInkuIDkuKrmraPmlbTmlbDCoE4sIOiuoeeul+S7jsKgMSDliLDCoE4g5Lit5pyJ5aSa5bCR5Liq5pWwwqBYIOaYr+WlveaVsO+8n1xuXG7npLrkvos6XG7ovpPlhaU6IDEwXG7ovpPlh7o6IDRcbuino+mHijpcbuWcqFsxLCAxMF3kuK3mnInlm5vkuKrlpb3mlbDvvJogMiwgNSwgNiwgOeOAglxu5rOo5oSPIDEg5ZKMIDEwIOS4jeaYr+WlveaVsCwg5Zug5Li65LuW5Lus5Zyo5peL6L2s5LmL5ZCO5LiN5Y+Y44CCXG7ms6jmhI86XG5cbk7CoOeahOWPluWAvOiMg+WbtOaYr8KgWzEsIDEwMDAwXeOAglxuXG7mnaXmupDvvJrlipvmiaPvvIhMZWV0Q29kZe+8iVxu6ZO+5o6l77yaaHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvcm90YXRlZC1kaWdpdHNcbuiRl+S9nOadg+W9kumihuaJo+e9kee7nOaJgOacieOAguWVhuS4mui9rOi9veivt+iBlOezu+WumOaWueaOiOadg++8jOmdnuWVhuS4mui9rOi9veivt+azqOaYjuWHuuWkhOOAglxuKiAqL1xuXG5cbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IE5cbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xudmFyIHJvdGF0ZWREaWdpdHMxID0gZnVuY3Rpb24gKE46IG51bWJlcikge1xuICAgIGxldCBudW0gPSAwO1xuICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IE47IGkrKykge1xuICAgICAgICBpc0dvb2ROdW1iZXIoaSkgJiYgbnVtKys7XG4gICAgfVxuICAgIHJldHVybiBudW07XG59O1xuXG4vKipcbiAqIOinhOWImSDmlbDlrZcg5Y+q6IO95pivMCAxIDggMiA1IDYgOVxuICog5LiU5LiN6IO95Y+q5pyJIDEgMCDnu4TmiJBcbiAqICovXG5mdW5jdGlvbiBpc0dvb2ROdW1iZXIobnVtOiBudW1iZXIpIHtcbiAgICBsZXQgaXNWYWxpZCA9IGZhbHNlO1xuICAgIHdoaWxlIChudW0gIT09IDApIHtcbiAgICAgICAgY29uc3QgcmVtYWluZGVyID0gbnVtICUgMTA7XG4gICAgICAgIGlmIChbMiwgNSwgNiwgOV0uaW5jbHVkZXMocmVtYWluZGVyKSkge1xuICAgICAgICAgICAgaXNWYWxpZCA9IHRydWU7XG4gICAgICAgICAgICBudW0gPSBNYXRoLmZsb29yKG51bSAvIDEwKTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChbMSwgMCwgOF0uaW5jbHVkZXMocmVtYWluZGVyKSkge1xuICAgICAgICAgICAgbnVtID0gTWF0aC5mbG9vcihudW0gLyAxMCk7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiBpc1ZhbGlkO1xufVxuXG5cbnZhciByb3RhdGVkRGlnaXRzMiA9IGZ1bmN0aW9uIChOOiBudW1iZXIpIHtcbiAgICBsZXQgbnVtID0gMDtcbiAgICBmb3IgKGxldCBpID0gMTsgaSA8PSBOOyBpKyspIHtcbiAgICAgICAgaXNHb29kTnVtYmVyMihpKSAmJiBudW0rKztcbiAgICB9XG4gICAgcmV0dXJuIG51bTtcbn07XG5jb25zdCBtYXAgPSBbMCwgMCwgMSwgLTEsIC0xLCAxLCAxLCAtMSwgMCwgMSwgMF07XG5cbmZ1bmN0aW9uIGlzR29vZE51bWJlcjIobnVtOiBudW1iZXIpIHtcbiAgICBsZXQgaXNWYWxpZCA9IDA7XG4gICAgd2hpbGUgKG51bSAhPT0gMCkge1xuICAgICAgICBjb25zdCByZW1haW5kZXIgPSBudW0gJSAxMDtcbiAgICAgICAgaWYgKG1hcFtyZW1haW5kZXJdID09PSAtMSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlzVmFsaWQgKz0gbWFwW3JlbWFpbmRlcl07XG4gICAgICAgIG51bSA9IE1hdGguZmxvb3IobnVtIC8gMTApO1xuICAgIH1cblxuICAgIHJldHVybiBpc1ZhbGlkID4gMDtcbn1cblxuaW1wb3J0IGFzc2VydCBmcm9tIFwiYXNzZXJ0XCI7XG5cbmFzc2VydC5zdHJpY3RFcXVhbChyb3RhdGVkRGlnaXRzMSgxMCksIDQpO1xuYXNzZXJ0LnN0cmljdEVxdWFsKHJvdGF0ZWREaWdpdHMyKDEwKSwgNCk7XG5cblxuY29uc3QgQmVuY2htYXJrID0gcmVxdWlyZSgnYmVuY2htYXJrJyk7XG5jb25zdCBzdWl0ZSA9IG5ldyBCZW5jaG1hcmsuU3VpdGU7XG5zdWl0ZVxuICAgIC5hZGQoJz09PScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcm90YXRlZERpZ2l0czEoMTApXG4gICAgfSlcbiAgICAuYWRkKCdtYXAnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJvdGF0ZWREaWdpdHMyKDEwKVxuICAgIH0pXG4gICAgLy8gYWRkIGxpc3RlbmVyc1xuICAgIC5vbignY3ljbGUnLCBmdW5jdGlvbiAoZXZlbnQ6IGFueSkge1xuICAgICAgICBjb25zb2xlLmxvZyhTdHJpbmcoZXZlbnQudGFyZ2V0KSk7XG4gICAgfSlcbiAgICAub24oJ2NvbXBsZXRlJywgZnVuY3Rpb24gKHRoaXM6IGFueSkge1xuICAgICAgICBjb25zb2xlLmxvZygnRmFzdGVzdCBpcyAnICsgdGhpcy5maWx0ZXIoJ2Zhc3Rlc3QnKS5tYXAoJ25hbWUnKSk7XG4gICAgfSlcbiAgICAvLyBydW4gYXN5bmNcbiAgICAucnVuKHsnYXN5bmMnOiBmYWxzZX0pO1xuXG4vKipcbiAqID09PSB4IDQsMzY1LDYzMCBvcHMvc2VjIOWNpDYuMjYlICg4NSBydW5zIHNhbXBsZWQpXG4gKiBtYXAgeCAxNyw1NTgsODg1IG9wcy9zZWMg5Y2kMi45MCUgKDg2IHJ1bnMgc2FtcGxlZClcbiAqIEZhc3Rlc3QgaXMgbWFwXG4gKiDov5nnp40g6ZyA6KaB5aSa5LiqIOWPr+mAieWAvOi/m+ihjOavlOi+g+eahCDkvb/nlKhtYXAg6YCf5bqmIOW/q+eahOWkmlxuICogKi9cbiJdfQ==
