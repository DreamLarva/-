"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @param {ListNode} head
 * @return {ListNode}
 */
// 迭代
var reverseList = function (head) {
    // 在遍历列表时，将当前节点的 next 指针改为指向前一个元素。由于节点没有引用其上一个节点，因此必须事先存储其前一个元素。
    // 在更改引用之前，还需要另一个指针来存储下一个节点。不要忘记在最后返回新的头引用！
    if (head == null || head.next === null)
        return head;
    let last = head, current = head.next;
    last.next = null;
    while (current !== null) {
        const next = current.next;
        current.next = last;
        last = current;
        current = next;
    }
    return last;
};
// 递归
var solution2 = function (head) {
    if (head == null || head.next === null)
        return head;
    const result = byStep(head, head.next);
    head.next = null;
    return result;
};
function byStep(lastNode, curNode) {
    if (curNode === null) {
        return lastNode;
    }
    else {
        const next = curNode.next;
        curNode.next = lastNode;
        return byStep(curNode, next);
    }
}
// 递归2
var solution3 = function (head) {
    if (head === null || head.next === null)
        return head;
    const result = solution3(head.next); // 拿到的是 原尾节点 现在的head节点
    // 递归后再执行操作
    head.next.next = head;
    head.next = null; // 保证原来头部 现在尾部的 next 值为null
    return result;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjA2LuWPjei9rOmTvuihqC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsibGVldGNvZGUvMjA2LuWPjei9rOmTvuihqC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQVVBOzs7R0FHRztBQUNILEtBQUs7QUFDTCxJQUFJLFdBQVcsR0FBRyxVQUFVLElBQWM7SUFDdEMsZ0VBQWdFO0lBQ2hFLDJDQUEyQztJQUMzQyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJO1FBQUUsT0FBTyxJQUFJLENBQUM7SUFFcEQsSUFDSSxJQUFJLEdBQVMsSUFBSSxFQUNqQixPQUFPLEdBQVMsSUFBSSxDQUFDLElBQUksQ0FBQztJQUM5QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNqQixPQUFPLE9BQU8sS0FBSyxJQUFJLEVBQUU7UUFDckIsTUFBTSxJQUFJLEdBQVEsT0FBTyxDQUFDLElBQUksQ0FBQztRQUMvQixPQUFPLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNwQixJQUFJLEdBQUcsT0FBTyxDQUFDO1FBQ2YsT0FBTyxHQUFHLElBQUksQ0FBQztLQUNsQjtJQUNELE9BQU8sSUFBSSxDQUFDO0FBQ2hCLENBQUMsQ0FBQztBQUVGLEtBQUs7QUFDTCxJQUFJLFNBQVMsR0FBRyxVQUFVLElBQWM7SUFDcEMsSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSTtRQUFFLE9BQU8sSUFBSSxDQUFDO0lBQ3BELE1BQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3ZDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ2pCLE9BQU8sTUFBTSxDQUFDO0FBQ2xCLENBQUMsQ0FBQztBQUVGLFNBQVMsTUFBTSxDQUFDLFFBQWtCLEVBQUUsT0FBd0I7SUFDeEQsSUFBSSxPQUFPLEtBQUssSUFBSSxFQUFFO1FBQ2xCLE9BQU8sUUFBUSxDQUFDO0tBQ25CO1NBQU07UUFDSCxNQUFNLElBQUksR0FBb0IsT0FBTyxDQUFDLElBQUksQ0FBQztRQUMzQyxPQUFPLENBQUMsSUFBSSxHQUFHLFFBQVEsQ0FBQztRQUN4QixPQUFPLE1BQU0sQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7S0FDaEM7QUFDTCxDQUFDO0FBRUQsTUFBTTtBQUNOLElBQUksU0FBUyxHQUFHLFVBQVUsSUFBYztJQUNwQyxJQUFJLElBQUksS0FBSyxJQUFJLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJO1FBQUUsT0FBTyxJQUFJLENBQUM7SUFDckQsTUFBTSxNQUFNLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLHNCQUFzQjtJQUMzRCxXQUFXO0lBQ1gsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ3RCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLENBQUMsMkJBQTJCO0lBQzdDLE9BQU8sTUFBTSxDQUFDO0FBQ2xCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG7lj43ovazkuIDkuKrljZXpk77ooajjgIJcblxu56S65L6LOlxuXG7ovpPlhaU6IDEtPjItPjMtPjQtPjUtPk5VTExcbui+k+WHujogNS0+NC0+My0+Mi0+MS0+TlVMTFxuKiAqL1xuaW1wb3J0IHtMaXN0Tm9kZX0gZnJvbSBcIi4uL3V0aWwvTGlua2VkTGlzdFwiO1xuXG4vKipcbiAqIEBwYXJhbSB7TGlzdE5vZGV9IGhlYWRcbiAqIEByZXR1cm4ge0xpc3ROb2RlfVxuICovXG4vLyDov63ku6NcbnZhciByZXZlcnNlTGlzdCA9IGZ1bmN0aW9uIChoZWFkOiBMaXN0Tm9kZSkge1xuICAgIC8vIOWcqOmBjeWOhuWIl+ihqOaXtu+8jOWwhuW9k+WJjeiKgueCueeahCBuZXh0IOaMh+mSiOaUueS4uuaMh+WQkeWJjeS4gOS4quWFg+e0oOOAgueUseS6juiKgueCueayoeacieW8leeUqOWFtuS4iuS4gOS4quiKgueCue+8jOWboOatpOW/hemhu+S6i+WFiOWtmOWCqOWFtuWJjeS4gOS4quWFg+e0oOOAglxuICAgIC8vIOWcqOabtOaUueW8leeUqOS5i+WJje+8jOi/mOmcgOimgeWPpuS4gOS4quaMh+mSiOadpeWtmOWCqOS4i+S4gOS4quiKgueCueOAguS4jeimgeW/mOiusOWcqOacgOWQjui/lOWbnuaWsOeahOWktOW8leeUqO+8gVxuICAgIGlmIChoZWFkID09IG51bGwgfHwgaGVhZC5uZXh0ID09PSBudWxsKSByZXR1cm4gaGVhZDtcbiAgICB0eXBlIE5vZGUgPSBMaXN0Tm9kZSB8IG51bGw7XG4gICAgbGV0XG4gICAgICAgIGxhc3Q6IE5vZGUgPSBoZWFkLFxuICAgICAgICBjdXJyZW50OiBOb2RlID0gaGVhZC5uZXh0O1xuICAgIGxhc3QubmV4dCA9IG51bGw7XG4gICAgd2hpbGUgKGN1cnJlbnQgIT09IG51bGwpIHtcbiAgICAgICAgY29uc3QgbmV4dDogYW55ID0gY3VycmVudC5uZXh0O1xuICAgICAgICBjdXJyZW50Lm5leHQgPSBsYXN0O1xuICAgICAgICBsYXN0ID0gY3VycmVudDtcbiAgICAgICAgY3VycmVudCA9IG5leHQ7XG4gICAgfVxuICAgIHJldHVybiBsYXN0O1xufTtcblxuLy8g6YCS5b2SXG52YXIgc29sdXRpb24yID0gZnVuY3Rpb24gKGhlYWQ6IExpc3ROb2RlKSB7XG4gICAgaWYgKGhlYWQgPT0gbnVsbCB8fCBoZWFkLm5leHQgPT09IG51bGwpIHJldHVybiBoZWFkO1xuICAgIGNvbnN0IHJlc3VsdCA9IGJ5U3RlcChoZWFkLCBoZWFkLm5leHQpO1xuICAgIGhlYWQubmV4dCA9IG51bGw7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbmZ1bmN0aW9uIGJ5U3RlcChsYXN0Tm9kZTogTGlzdE5vZGUsIGN1ck5vZGU6IExpc3ROb2RlIHwgbnVsbCk6IExpc3ROb2RlIHtcbiAgICBpZiAoY3VyTm9kZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbGFzdE5vZGU7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgbmV4dDogTGlzdE5vZGUgfCBudWxsID0gY3VyTm9kZS5uZXh0O1xuICAgICAgICBjdXJOb2RlLm5leHQgPSBsYXN0Tm9kZTtcbiAgICAgICAgcmV0dXJuIGJ5U3RlcChjdXJOb2RlLCBuZXh0KTtcbiAgICB9XG59XG5cbi8vIOmAkuW9kjJcbnZhciBzb2x1dGlvbjMgPSBmdW5jdGlvbiAoaGVhZDogTGlzdE5vZGUpOiBMaXN0Tm9kZSB8IG51bGwge1xuICAgIGlmIChoZWFkID09PSBudWxsIHx8IGhlYWQubmV4dCA9PT0gbnVsbCkgcmV0dXJuIGhlYWQ7XG4gICAgY29uc3QgcmVzdWx0ID0gc29sdXRpb24zKGhlYWQubmV4dCk7IC8vIOaLv+WIsOeahOaYryDljp/lsL7oioLngrkg546w5Zyo55qEaGVhZOiKgueCuVxuICAgIC8vIOmAkuW9kuWQjuWGjeaJp+ihjOaTjeS9nFxuICAgIGhlYWQubmV4dC5uZXh0ID0gaGVhZDtcbiAgICBoZWFkLm5leHQgPSBudWxsOyAvLyDkv53or4Hljp/mnaXlpLTpg6gg546w5Zyo5bC+6YOo55qEIG5leHQg5YC85Li6bnVsbFxuICAgIHJldHVybiByZXN1bHQ7XG59O1xuXG5cbmV4cG9ydCB7fVxuIl19