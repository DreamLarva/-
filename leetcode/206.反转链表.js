"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @param {ListNode} head
 * @return {ListNode}
 */
// 迭代
var reverseList = function (head) {
    // 在遍历列表时，将当前节点的 next 指针改为指向前一个元素。由于节点没有引用其上一个节点，因此必须事先存储其前一个元素。
    // 在更改引用之前，还需要另一个指针来存储下一个节点。不要忘记在最后返回新的头引用！
    if (head == null || head.next === null)
        return head;
    let last = head, current = head.next;
    last.next = null;
    while (current !== null) {
        const next = current.next;
        current.next = last;
        last = current;
        current = next;
    }
    return last;
};
// 递归
var solution2 = function (head) {
    if (head == null || head.next === null)
        return head;
    const result = byStep(head, head.next);
    head.next = null;
    return result;
};
function byStep(lastNode, curNode) {
    if (curNode === null) {
        return lastNode;
    }
    else {
        const next = curNode.next;
        curNode.next = lastNode;
        return byStep(curNode, next);
    }
}
// 递归2 精彩的递归
var solution3 = function (head) {
    if (head === null || head.next === null)
        return head;
    const result = solution3(head.next); // 拿到的是 原尾节点 现在的head节点
    // 递归后再执行操作
    head.next.next = head;
    head.next = null; // 保证原来头部 现在尾部的 next 值为null
    return result;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjA2LuWPjei9rOmTvuihqC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsibGVldGNvZGUvMjA2LuWPjei9rOmTvuihqC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQVVBOzs7R0FHRztBQUNILEtBQUs7QUFDTCxJQUFJLFdBQVcsR0FBRyxVQUFVLElBQWM7SUFDeEMsZ0VBQWdFO0lBQ2hFLDJDQUEyQztJQUMzQyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJO1FBQUUsT0FBTyxJQUFJLENBQUM7SUFFcEQsSUFBSSxJQUFJLEdBQVMsSUFBSSxFQUNuQixPQUFPLEdBQVMsSUFBSSxDQUFDLElBQUksQ0FBQztJQUM1QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNqQixPQUFPLE9BQU8sS0FBSyxJQUFJLEVBQUU7UUFDdkIsTUFBTSxJQUFJLEdBQVEsT0FBTyxDQUFDLElBQUksQ0FBQztRQUMvQixPQUFPLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNwQixJQUFJLEdBQUcsT0FBTyxDQUFDO1FBQ2YsT0FBTyxHQUFHLElBQUksQ0FBQztLQUNoQjtJQUNELE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQyxDQUFDO0FBRUYsS0FBSztBQUNMLElBQUksU0FBUyxHQUFHLFVBQVUsSUFBYztJQUN0QyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJO1FBQUUsT0FBTyxJQUFJLENBQUM7SUFDcEQsTUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdkMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDakIsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQyxDQUFDO0FBRUYsU0FBUyxNQUFNLENBQUMsUUFBa0IsRUFBRSxPQUF3QjtJQUMxRCxJQUFJLE9BQU8sS0FBSyxJQUFJLEVBQUU7UUFDcEIsT0FBTyxRQUFRLENBQUM7S0FDakI7U0FBTTtRQUNMLE1BQU0sSUFBSSxHQUFvQixPQUFPLENBQUMsSUFBSSxDQUFDO1FBQzNDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsUUFBUSxDQUFDO1FBQ3hCLE9BQU8sTUFBTSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsQ0FBQztLQUM5QjtBQUNILENBQUM7QUFFRCxZQUFZO0FBQ1osSUFBSSxTQUFTLEdBQUcsVUFBVSxJQUFjO0lBQ3RDLElBQUksSUFBSSxLQUFLLElBQUksSUFBSSxJQUFJLENBQUMsSUFBSSxLQUFLLElBQUk7UUFBRSxPQUFPLElBQUksQ0FBQztJQUNyRCxNQUFNLE1BQU0sR0FBRyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsc0JBQXNCO0lBQzNELFdBQVc7SUFDWCxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDdEIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsQ0FBQywyQkFBMkI7SUFDN0MsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcclxu5Y+N6L2s5LiA5Liq5Y2V6ZO+6KGo44CCXHJcblxyXG7npLrkvos6XHJcblxyXG7ovpPlhaU6IDEtPjItPjMtPjQtPjUtPk5VTExcclxu6L6T5Ye6OiA1LT40LT4zLT4yLT4xLT5OVUxMXHJcbiogKi9cclxuaW1wb3J0IHsgTGlzdE5vZGUgfSBmcm9tIFwiLi4vdXRpbC9MaW5rZWRMaXN0XCI7XHJcblxyXG4vKipcclxuICogQHBhcmFtIHtMaXN0Tm9kZX0gaGVhZFxyXG4gKiBAcmV0dXJuIHtMaXN0Tm9kZX1cclxuICovXHJcbi8vIOi/reS7o1xyXG52YXIgcmV2ZXJzZUxpc3QgPSBmdW5jdGlvbiAoaGVhZDogTGlzdE5vZGUpIHtcclxuICAvLyDlnKjpgY3ljobliJfooajml7bvvIzlsIblvZPliY3oioLngrnnmoQgbmV4dCDmjIfpkojmlLnkuLrmjIflkJHliY3kuIDkuKrlhYPntKDjgILnlLHkuo7oioLngrnmsqHmnInlvJXnlKjlhbbkuIrkuIDkuKroioLngrnvvIzlm6DmraTlv4XpobvkuovlhYjlrZjlgqjlhbbliY3kuIDkuKrlhYPntKDjgIJcclxuICAvLyDlnKjmm7TmlLnlvJXnlKjkuYvliY3vvIzov5jpnIDopoHlj6bkuIDkuKrmjIfpkojmnaXlrZjlgqjkuIvkuIDkuKroioLngrnjgILkuI3opoHlv5jorrDlnKjmnIDlkI7ov5Tlm57mlrDnmoTlpLTlvJXnlKjvvIFcclxuICBpZiAoaGVhZCA9PSBudWxsIHx8IGhlYWQubmV4dCA9PT0gbnVsbCkgcmV0dXJuIGhlYWQ7XHJcbiAgdHlwZSBOb2RlID0gTGlzdE5vZGUgfCBudWxsO1xyXG4gIGxldCBsYXN0OiBOb2RlID0gaGVhZCxcclxuICAgIGN1cnJlbnQ6IE5vZGUgPSBoZWFkLm5leHQ7XHJcbiAgbGFzdC5uZXh0ID0gbnVsbDtcclxuICB3aGlsZSAoY3VycmVudCAhPT0gbnVsbCkge1xyXG4gICAgY29uc3QgbmV4dDogYW55ID0gY3VycmVudC5uZXh0O1xyXG4gICAgY3VycmVudC5uZXh0ID0gbGFzdDtcclxuICAgIGxhc3QgPSBjdXJyZW50O1xyXG4gICAgY3VycmVudCA9IG5leHQ7XHJcbiAgfVxyXG4gIHJldHVybiBsYXN0O1xyXG59O1xyXG5cclxuLy8g6YCS5b2SXHJcbnZhciBzb2x1dGlvbjIgPSBmdW5jdGlvbiAoaGVhZDogTGlzdE5vZGUpIHtcclxuICBpZiAoaGVhZCA9PSBudWxsIHx8IGhlYWQubmV4dCA9PT0gbnVsbCkgcmV0dXJuIGhlYWQ7XHJcbiAgY29uc3QgcmVzdWx0ID0gYnlTdGVwKGhlYWQsIGhlYWQubmV4dCk7XHJcbiAgaGVhZC5uZXh0ID0gbnVsbDtcclxuICByZXR1cm4gcmVzdWx0O1xyXG59O1xyXG5cclxuZnVuY3Rpb24gYnlTdGVwKGxhc3ROb2RlOiBMaXN0Tm9kZSwgY3VyTm9kZTogTGlzdE5vZGUgfCBudWxsKTogTGlzdE5vZGUge1xyXG4gIGlmIChjdXJOb2RlID09PSBudWxsKSB7XHJcbiAgICByZXR1cm4gbGFzdE5vZGU7XHJcbiAgfSBlbHNlIHtcclxuICAgIGNvbnN0IG5leHQ6IExpc3ROb2RlIHwgbnVsbCA9IGN1ck5vZGUubmV4dDtcclxuICAgIGN1ck5vZGUubmV4dCA9IGxhc3ROb2RlO1xyXG4gICAgcmV0dXJuIGJ5U3RlcChjdXJOb2RlLCBuZXh0KTtcclxuICB9XHJcbn1cclxuXHJcbi8vIOmAkuW9kjIg57K+5b2p55qE6YCS5b2SXHJcbnZhciBzb2x1dGlvbjMgPSBmdW5jdGlvbiAoaGVhZDogTGlzdE5vZGUpOiBMaXN0Tm9kZSB8IG51bGwge1xyXG4gIGlmIChoZWFkID09PSBudWxsIHx8IGhlYWQubmV4dCA9PT0gbnVsbCkgcmV0dXJuIGhlYWQ7XHJcbiAgY29uc3QgcmVzdWx0ID0gc29sdXRpb24zKGhlYWQubmV4dCk7IC8vIOaLv+WIsOeahOaYryDljp/lsL7oioLngrkg546w5Zyo55qEaGVhZOiKgueCuVxyXG4gIC8vIOmAkuW9kuWQjuWGjeaJp+ihjOaTjeS9nFxyXG4gIGhlYWQubmV4dC5uZXh0ID0gaGVhZDtcclxuICBoZWFkLm5leHQgPSBudWxsOyAvLyDkv53or4Hljp/mnaXlpLTpg6gg546w5Zyo5bC+6YOo55qEIG5leHQg5YC85Li6bnVsbFxyXG4gIHJldHVybiByZXN1bHQ7XHJcbn07XHJcblxyXG5leHBvcnQge307XHJcbiJdfQ==